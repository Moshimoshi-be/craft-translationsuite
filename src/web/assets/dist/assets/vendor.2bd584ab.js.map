{"version":3,"file":"vendor.2bd584ab.js","sources":["../../../../../buildchain/node_modules/vue-confetti/src/utils/get-random-number.js","../../../../../buildchain/node_modules/vue-confetti/src/particles/base.js","../../../../../buildchain/node_modules/vue-confetti/src/particles/circle.js","../../../../../buildchain/node_modules/vue-confetti/src/particles/rect.js","../../../../../buildchain/node_modules/vue-confetti/src/particles/heart.js","../../../../../buildchain/node_modules/vue-confetti/src/particles/image.js","../../../../../buildchain/node_modules/vue-confetti/src/factories/particle.js","../../../../../buildchain/node_modules/vue-confetti/src/particle-manager.js","../../../../../buildchain/node_modules/vue-confetti/src/canvas.js","../../../../../buildchain/node_modules/vue-confetti/src/confetti.js","../../../../../buildchain/node_modules/@vue/devtools-api/lib/esm/env.js","../../../../../buildchain/node_modules/@vue/devtools-api/lib/esm/index.js","../../../../../buildchain/node_modules/@vue/devtools-api/lib/esm/const.js","../../../../../buildchain/node_modules/axios/index.d.ts","../../../../../buildchain/node_modules/@meforma/vue-toaster/src/helpers/timer.js","../../../../../buildchain/node_modules/@meforma/vue-toaster/src/defaults/positions.js","../../../../../buildchain/node_modules/@meforma/vue-toaster/src/helpers/event-bus.js","../../../../../buildchain/node_modules/@meforma/vue-toaster/src/Toaster.vue","../../../../../buildchain/node_modules/@meforma/vue-toaster/src/helpers/remove-element.js","../../../../../buildchain/node_modules/@meforma/vue-toaster/src/helpers/mount-component.js","../../../../../buildchain/node_modules/@meforma/vue-toaster/src/api.js","../../../../../buildchain/node_modules/sortablejs/modular/sortable.esm.js","../../../../../buildchain/node_modules/@meforma/vue-toaster/src/index.js","../../../../../buildchain/node_modules/vuedraggable/src/util/htmlHelper.js","../../../../../buildchain/node_modules/vuedraggable/src/util/console.js","../../../../../buildchain/node_modules/vuedraggable/src/util/string.js","../../../../../buildchain/node_modules/vuedraggable/src/core/sortableEvents.js","../../../../../buildchain/node_modules/vuedraggable/src/util/tags.js","../../../../../buildchain/node_modules/vuedraggable/src/core/componentBuilderHelper.js","../../../../../buildchain/node_modules/vuedraggable/src/core/componentStructure.js","../../../../../buildchain/node_modules/vuedraggable/src/core/renderHelper.js","../../../../../buildchain/node_modules/vuedraggable/src/vuedraggable.js"],"sourcesContent":["/**\n * Return a random number.\n * @param {Number} [min]\n *   The minimum number (default 1).\n * @param {Number} [max]\n *   The maximum number (default min + 1).\n * @param {boolean} round\n *   True to round the number to the nearest integer, false otherwise.\n * @return {Number}\n *   A random number between min and max.\n */\nexport default (min = 1, max = min + 1, round = false) => {\n  const minN = parseFloat(min);\n  const maxN = parseFloat(max);\n  const n = Math.random() * (maxN - minN) + minN;\n  return round ? Math.round(n) : n;\n};\n","import getRandomNumber from '../utils/get-random-number';\n\n/**\n * A particle that can be drawn on a canvas.\n */\nexport default class BaseParticle {\n  /**\n   * Initialise.\n   * @param {object} options\n   *   The particle options.\n   * @param {string} options.color\n   *   The particle color.\n   * @param {number} options.size\n   *   The particle size.\n   * @param {number} options.dropRate\n   *   The speed at which particles fall.\n   */\n  constructor({\n    color = 'blue',\n    size = 10,\n    dropRate = 10,\n  } = {}) {\n    this.color = color;\n    this.size = size;\n    this.dropRate = dropRate;\n  }\n\n  /**\n   * Setup.\n   * @param {options} opts\n   *   The particle options.\n   */\n  setup({\n    canvas,\n    wind,\n    windPosCoef,\n    windSpeedMax,\n    count,\n  }) {\n    this.canvas = canvas;\n    this.wind = wind;\n    this.windPosCoef = windPosCoef;\n    this.windSpeedMax = windSpeedMax;\n    this.x = getRandomNumber(-35, this.canvas.width + 35);\n    this.y = getRandomNumber(-30, -35);\n    this.d = getRandomNumber(150) + 10; // density\n    this.particleSize = getRandomNumber(this.size, this.size * 2);\n    this.tilt = getRandomNumber(10);\n    this.tiltAngleIncremental = (\n      (getRandomNumber(0, 0.08) + 0.04) * (getRandomNumber() < 0.5 ? -1 : 1)\n    );\n    this.tiltAngle = 0;\n    this.angle = getRandomNumber(Math.PI * 2);\n    this.count = count + 1;\n    this.remove = false;\n    return this;\n  }\n\n  /**\n   * Update the particle.\n   */\n  update() {\n    this.tiltAngle += (this.tiltAngleIncremental * (\n      Math.cos(this.wind + (this.d + this.x + this.y) * this.windPosCoef)\n      * 0.2 + 1\n    ));\n    this.y += (Math.cos(this.angle + this.d) + parseInt(this.dropRate, 10)) / 2;\n\n    this.x += (Math.sin(this.angle) + Math.cos(\n      this.wind + (this.d + this.x + this.y) * this.windPosCoef,\n    )) * this.windSpeedMax;\n    this.y += Math.sin(\n      this.wind + (this.d + this.x + this.y) * this.windPosCoef,\n    ) * this.windSpeedMax;\n    this.tilt = (Math.sin(this.tiltAngle - (this.count / 3))) * 15;\n  }\n\n  /**\n   * Check if the particle is past the bottom of the canvas;\n   */\n  pastBottom() {\n    return this.y > this.canvas.height;\n  }\n\n  /**\n   * Draw a particle.\n   */\n  draw() {\n    this.canvas.ctx.fillStyle = this.color;\n    this.canvas.ctx.beginPath();\n    this.canvas.ctx.setTransform(\n      Math.cos(this.tiltAngle), // set the x axis to the tilt angle\n      Math.sin(this.tiltAngle),\n      0,\n      1,\n      this.x,\n      this.y, // set the origin\n    );\n  }\n\n  /**\n   * Kill the particle after it has left the screen.\n   */\n  kill() {\n    this.remove = true;\n  }\n}\n","import BaseParticle from './base';\n\n/**\n * Class representing a circular particle.\n */\nexport default class CircleParticle extends BaseParticle {\n  /**\n   * Draw the particle.\n   */\n  draw() {\n    super.draw();\n    this.canvas.ctx.arc(0, 0, (this.particleSize / 2), 0, Math.PI * 2, false);\n    this.canvas.ctx.fill();\n  }\n}\n","import BaseParticle from './base';\n\n/**\n * Class representing a rectangular particle.\n */\nexport default class RectParticle extends BaseParticle {\n  /**\n   * Draw the particle.\n   */\n  draw() {\n    super.draw();\n    this.canvas.ctx.fillRect(0, 0, this.particleSize, this.particleSize / 2);\n  }\n}\n","import BaseParticle from './base';\n\n/**\n * Class representing a heart-shaped particle.\n */\nexport default class HeartParticle extends BaseParticle {\n  /**\n   * Draw the particle.\n   */\n  draw() {\n    super.draw();\n    const curveTo = (cp1x, cp1y, cp2x, cp2y, x, y) => {\n      this.canvas.ctx.bezierCurveTo(\n        cp1x * (this.particleSize / 200),\n        cp1y * (this.particleSize / 200),\n        cp2x * (this.particleSize / 200),\n        cp2y * (this.particleSize / 200),\n        x * (this.particleSize / 200),\n        y * (this.particleSize / 200),\n      );\n    };\n    this.canvas.ctx.moveTo(37.5 / this.particleSize, 20 / this.particleSize);\n    curveTo(75, 37, 70, 25, 50, 25);\n    curveTo(20, 25, 20, 62.5, 20, 62.5);\n    curveTo(20, 80, 40, 102, 75, 120);\n    curveTo(110, 102, 130, 80, 130, 62.5);\n    curveTo(130, 62.5, 130, 25, 100, 25);\n    curveTo(85, 25, 75, 37, 75, 40);\n    this.canvas.ctx.fill();\n  }\n}\n","import BaseParticle from './base';\n\n/**\n * Class representing an image particle.\n */\nexport default class ImageParticle extends BaseParticle {\n  /**\n   * Initialise\n   * @param {HTMLImageElement} imgEl\n   *  An image element to pass through to ctx.drawImage.\n   */\n  constructor(opts, imgEl) {\n    super(opts);\n\n    this.imgEl = imgEl;\n  }\n\n  /**\n   * Draw the particle.\n   */\n  draw() {\n    super.draw();\n    this.canvas.ctx.drawImage(this.imgEl, 0, 0, this.particleSize, this.particleSize);\n  }\n}\n","import getRandomNumber from '../utils/get-random-number';\nimport {\n  CircleParticle,\n  RectParticle,\n  HeartParticle,\n  ImageParticle,\n} from '../particles';\n\n/**\n * Create a particle based on the given options.\n * @param {object} options\n *   The particle options.\n * @returns {object}\n *   A particle.\n */\nexport default class ParticleFactory {\n  constructor() {\n    this.cachedImages = {};\n  }\n\n  /**\n   * Create an image element from the given source.\n   * @param {string} imgSource\n   *   The path to the image.\n   */\n  createImageElement(imgSource) {\n    const imgEl = document.createElement('img');\n    imgEl.setAttribute('src', imgSource);\n    return imgEl;\n  }\n\n  /**\n   * Get an image element from a source string.\n   * @param {string} imgSource\n   *   The path to the image.\n   */\n  getImageElement(imgSource) {\n    if (!this.cachedImages[imgSource]) {\n      this.cachedImages[imgSource] = this.createImageElement(imgSource);\n    }\n    return this.cachedImages[imgSource];\n  }\n\n  /**\n   * Get a random particle from the list of available particles.\n   * @param {Object} options\n   *   The particle options.\n   */\n  getRandomParticle(options = {}) {\n    const particles = options.particles || [];\n\n    if (particles.length < 1) {\n      return {};\n    }\n\n    return particles[Math.floor(Math.random() * particles.length)];\n  }\n\n  /**\n   * Get the particle defaults.\n   * @param {Object} options\n   *   The particle options.\n   */\n  getDefaults(options = {}) {\n    return {\n      type: options.defaultType || 'circle',\n      size: options.defaultSize || 10,\n      dropRate: options.defaultDropRate || 10,\n      colors: options.defaultColors || [\n        'DodgerBlue',\n        'OliveDrab',\n        'Gold',\n        'pink',\n        'SlateBlue',\n        'lightblue',\n        'Violet',\n        'PaleGreen',\n        'SteelBlue',\n        'SandyBrown',\n        'Chocolate',\n        'Crimson',\n      ],\n      url: null,\n    };\n  }\n\n  /**\n   * Create a particle.\n   * @param {Object} options\n   *   The particle options.\n   */\n  create(options) {\n    const defaults = this.getDefaults(options);\n    const particle = this.getRandomParticle(options);\n\n    const opts = Object.assign(defaults, particle);\n\n    // Set a random color from the array\n    const colorIndex = getRandomNumber(0, opts.colors.length - 1, true);\n    opts.color = opts.colors[colorIndex];\n\n    if (opts.type === 'circle') {\n      return new CircleParticle(opts);\n    }\n\n    if (opts.type === 'rect') {\n      return new RectParticle(opts);\n    }\n\n    if (opts.type === 'heart') {\n      return new HeartParticle(opts);\n    }\n\n    if (opts.type === 'image') {\n      return new ImageParticle(opts, this.getImageElement(opts.url));\n    }\n\n    throw Error(`Unknown particle type: \"${opts.type}\"`);\n  }\n}\n","import ParticleFactory from './factories/particle';\n\n/**\n * A particle generation and management service.\n */\nexport default class ParticleManger {\n  /**\n   * Initialise.\n   * @param {object} particleOptions\n   *   The particle options.\n   */\n  constructor(particleOptions) {\n    this.items = [];\n    this.pool = [];\n    this.particleOptions = particleOptions;\n    this.particleFactory = new ParticleFactory();\n  }\n\n  /**\n   * Update the position of each particle.\n   *\n   * Moves particles back to the pool if past the bottom and not due for removal.\n   */\n  update() {\n    const oldItems = [];\n    const newItems = [];\n\n    this.items.forEach((particle) => {\n      particle.update();\n\n      if (particle.pastBottom()) {\n        if (!particle.remove) {\n          particle.setup(this.particleOptions);\n          oldItems.push(particle);\n        }\n      } else {\n        newItems.push(particle);\n      }\n    });\n\n    this.pool.push(...oldItems);\n\n    this.items = newItems;\n  }\n\n  /**\n   * Draw the particles currently in view.\n   */\n  draw() {\n    this.items.forEach(item => item.draw());\n  }\n\n  /**\n   * Add an item to the view.\n   */\n  add() {\n    if (this.pool.length > 0) {\n      this.items.push(this.pool.pop().setup(this.particleOptions));\n    } else {\n      this.items.push(\n        this.particleFactory.create(this.particleOptions).setup(this.particleOptions),\n      );\n    }\n  }\n\n  /**\n   * Replace particles once they have left the screen.\n   */\n  refresh() {\n    this.items.forEach((item) => {\n      item.kill();\n    });\n\n    this.pool = [];\n  }\n}\n","/**\n * Class to generate and interact with an HTML canvas.\n */\nexport default class Canvas {\n  /**\n   * Initialise.\n   * @param {HTMLCanvasElement} [canvasElement]\n   *   An optional HTMLCanvasElement to override the default.\n   */\n  constructor(canvasElement) {\n    const defaultCanvasId = 'confetti-canvas';\n\n    if (canvasElement && !(canvasElement instanceof HTMLCanvasElement)) {\n      throw new Error('Element is not a valid HTMLCanvasElement');\n    }\n\n    this.isDefault = !canvasElement;\n\n    this.canvas = canvasElement || Canvas.createDefaultCanvas(defaultCanvasId);\n\n    this.ctx = this.canvas.getContext('2d');\n  }\n\n  /**\n   * Add a fixed, full-screen canvas to the page.\n   * @returns {HTMLCanvasElement}\n   *   A full-screen canvas.\n   */\n  static createDefaultCanvas(id) {\n    const canvas = document.createElement('canvas');\n    canvas.style.display = 'block';\n    canvas.style.position = 'fixed';\n    canvas.style.pointerEvents = 'none';\n    canvas.style.top = 0;\n    canvas.style.width = '100vw';\n    canvas.style.height = '100vh';\n    canvas.id = id;\n    document.querySelector('body').appendChild(canvas);\n    return canvas;\n  }\n\n  /**\n   * Get the canvas width.\n   * @returns {Number}\n   *   The canvas width.\n   */\n  get width() {\n    return this.canvas.width;\n  }\n\n  /**\n   * Get the canvas height.\n   * @returns {Number}\n   *   The canvas height.\n   */\n  get height() {\n    return this.canvas.height;\n  }\n\n  /**\n   * Clear the canvas.\n   */\n  clear() {\n    this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n    this.ctx.clearRect(0, 0, this.width, this.height);\n  }\n\n  /**\n   * Update the canvas dimensions, if necessary.\n   */\n  updateDimensions() {\n    if (!this.isDefault) {\n      return;\n    }\n\n    if (this.width !== window.innerWidth || this.height !== window.innerHeight) {\n      this.canvas.width = window.innerWidth;\n      this.canvas.height = window.innerHeight;\n    }\n  }\n}\n","import ParticleManager from './particle-manager';\nimport Canvas from './canvas';\n\n/**\n * A class to drawing confetti onto a canvas.\n */\nexport default class Confetti {\n  /**\n   * Initialise.\n   */\n  constructor() {\n    this.setDefaults();\n  }\n\n  /**\n   * Initialize default.\n   */\n  setDefaults() {\n    this.killed = false;\n    this.framesSinceDrop = 0;\n    this.canvas = null;\n    this.canvasEl = null;\n    this.W = 0;\n    this.H = 0;\n    this.particleManager = null;\n    this.particlesPerFrame = 0; // max particles dropped per frame\n    this.wind = 0;\n    this.windSpeed = 1;\n    this.windSpeedMax = 1;\n    this.windChange = 0.01;\n    this.windPosCoef = 0.002;\n    this.animationId = null;\n  }\n\n  getParticleOptions(opts) {\n    const options = {\n      canvas: this.canvas,\n      W: this.W,\n      H: this.H,\n      wind: this.wind,\n      windPosCoef: this.windPosCoef,\n      windSpeedMax: this.windSpeedMax,\n      count: 0,\n    };\n\n    Object.assign(options, opts);\n\n    return options;\n  }\n\n  /**\n   * Create the confetti particles.\n   * @param {Object} opts\n   *   The particle options.\n   */\n  createParticles(opts = {}) {\n    const particleOpts = this.getParticleOptions(opts);\n    this.particleManager = new ParticleManager(particleOpts);\n  }\n\n  /**\n   * Get a canvas element from the given options.\n   * @param {Object} opts\n   *   The particle options.\n   */\n  getCanvasElementFromOptions(opts) {\n    const { canvasId, canvasElement } = opts;\n    let canvasEl = canvasElement;\n\n    if (canvasElement && !(canvasElement instanceof HTMLCanvasElement)) {\n      throw new Error('Invalid options: canvasElement is not a valid HTMLCanvasElement');\n    }\n\n    if (canvasId && canvasElement) {\n      throw new Error('Invalid options: canvasId and canvasElement are mutually exclusive');\n    }\n\n    if (canvasId && !canvasEl) {\n      canvasEl = document.getElementById(canvasId);\n    }\n\n    if (canvasId && !(canvasEl instanceof HTMLCanvasElement)) {\n      throw new Error(`Invalid options: element with id \"${canvasId}\" is not a valid HTMLCanvasElement`);\n    }\n\n    return canvasEl;\n  }\n\n  /**\n   * Start dropping confetti.\n   * @param {Object} opts\n   *   The particle options.\n   */\n  start(opts = {}) {\n    this.remove(); // clear any previous settings\n\n    const canvasEl = this.getCanvasElementFromOptions(opts);\n\n    this.canvas = new Canvas(canvasEl);\n    this.canvasEl = canvasEl;\n\n    this.createParticles(opts);\n    this.setGlobalOptions(opts);\n    this.animationId = requestAnimationFrame(this.mainLoop.bind(this));\n  }\n\n  /**\n   * Set the global options.\n   */\n  setGlobalOptions(opts) {\n    this.particlesPerFrame = opts.particlesPerFrame || 2;\n    this.windSpeedMax = opts.windSpeedMax || 1;\n  }\n\n  /**\n   * Stop dropping confetti.\n   */\n  stop() {\n    this.killed = true;\n    this.particlesPerFrame = 0;\n  }\n\n  /**\n   * Update the confetti options.\n   */\n  update(opts) {\n    const canvasEl = this.getCanvasElementFromOptions(opts);\n\n    // Restart if a different canvas is given\n    if (this.canvas && canvasEl !== this.canvasEl) {\n      this.start(opts);\n      return;\n    }\n\n    this.setGlobalOptions(opts);\n\n    if (this.particleManager) {\n      this.particleManager.particleOptions = this.getParticleOptions(opts);\n      this.particleManager.refresh();\n    }\n  }\n\n  /**\n   * Remove confetti.\n   */\n  remove() {\n    this.stop();\n\n    if (this.animationId) {\n      cancelAnimationFrame(this.animationId);\n    }\n\n    if (this.canvas) {\n      this.canvas.clear();\n    }\n\n    this.setDefaults();\n  }\n\n  /**\n   * Run the main animation loop.\n   */\n  mainLoop(time) {\n    this.canvas.updateDimensions();\n    this.canvas.clear();\n\n    this.windSpeed = Math.sin(time / 8000) * this.windSpeedMax;\n    this.wind = this.particleManager.particleOptions.wind += this.windChange; // eslint-disable-line\n\n    let numberToAdd = this.framesSinceDrop * this.particlesPerFrame;\n\n    while (numberToAdd >= 1) {\n      this.particleManager.add();\n      numberToAdd -= 1;\n      this.framesSinceDrop = 0;\n    }\n\n    this.particleManager.update();\n    this.particleManager.draw();\n\n    // Stop calling if no particles left in view (i.e. it's been stopped)\n    if (!this.killed || this.particleManager.items.length) {\n      this.animationId = requestAnimationFrame(this.mainLoop.bind(this));\n    }\n\n    this.framesSinceDrop += 1;\n  }\n}\n","export function getDevtoolsGlobalHook() {\n    return getTarget().__VUE_DEVTOOLS_GLOBAL_HOOK__;\n}\nexport function getTarget() {\n    // @ts-ignore\n    return typeof navigator !== 'undefined'\n        ? window\n        : typeof global !== 'undefined'\n            ? global\n            : {};\n}\n","import { getTarget, getDevtoolsGlobalHook } from './env';\nimport { HOOK_SETUP } from './const';\nexport * from './api';\nexport function setupDevtoolsPlugin(pluginDescriptor, setupFn) {\n    const hook = getDevtoolsGlobalHook();\n    if (hook) {\n        hook.emit(HOOK_SETUP, pluginDescriptor, setupFn);\n    }\n    else {\n        const target = getTarget();\n        const list = target.__VUE_DEVTOOLS_PLUGINS__ = target.__VUE_DEVTOOLS_PLUGINS__ || [];\n        list.push({\n            pluginDescriptor,\n            setupFn\n        });\n    }\n}\n","export const HOOK_SETUP = 'devtools-plugin:setup';\n","export interface AxiosTransformer {\n  (data: any, headers?: any): any;\n}\n\nexport interface AxiosAdapter {\n  (config: AxiosRequestConfig): AxiosPromise<any>;\n}\n\nexport interface AxiosBasicCredentials {\n  username: string;\n  password: string;\n}\n\nexport interface AxiosProxyConfig {\n  host: string;\n  port: number;\n  auth?: {\n    username: string;\n    password:string;\n  };\n  protocol?: string;\n}\n\nexport type Method =\n  | 'get' | 'GET'\n  | 'delete' | 'DELETE'\n  | 'head' | 'HEAD'\n  | 'options' | 'OPTIONS'\n  | 'post' | 'POST'\n  | 'put' | 'PUT'\n  | 'patch' | 'PATCH'\n  | 'purge' | 'PURGE'\n  | 'link' | 'LINK'\n  | 'unlink' | 'UNLINK'\n\nexport type ResponseType =\n  | 'arraybuffer'\n  | 'blob'\n  | 'document'\n  | 'json'\n  | 'text'\n  | 'stream'\n\nexport interface AxiosRequestConfig {\n  url?: string;\n  method?: Method;\n  baseURL?: string;\n  transformRequest?: AxiosTransformer | AxiosTransformer[];\n  transformResponse?: AxiosTransformer | AxiosTransformer[];\n  headers?: any;\n  params?: any;\n  paramsSerializer?: (params: any) => string;\n  data?: any;\n  timeout?: number;\n  timeoutErrorMessage?: string;\n  withCredentials?: boolean;\n  adapter?: AxiosAdapter;\n  auth?: AxiosBasicCredentials;\n  responseType?: ResponseType;\n  xsrfCookieName?: string;\n  xsrfHeaderName?: string;\n  onUploadProgress?: (progressEvent: any) => void;\n  onDownloadProgress?: (progressEvent: any) => void;\n  maxContentLength?: number;\n  validateStatus?: ((status: number) => boolean) | null;\n  maxBodyLength?: number;\n  maxRedirects?: number;\n  socketPath?: string | null;\n  httpAgent?: any;\n  httpsAgent?: any;\n  proxy?: AxiosProxyConfig | false;\n  cancelToken?: CancelToken;\n  decompress?: boolean;\n}\n\nexport interface AxiosResponse<T = any>  {\n  data: T;\n  status: number;\n  statusText: string;\n  headers: any;\n  config: AxiosRequestConfig;\n  request?: any;\n}\n\nexport interface AxiosError<T = any> extends Error {\n  config: AxiosRequestConfig;\n  code?: string;\n  request?: any;\n  response?: AxiosResponse<T>;\n  isAxiosError: boolean;\n  toJSON: () => object;\n}\n\nexport interface AxiosPromise<T = any> extends Promise<AxiosResponse<T>> {\n}\n\nexport interface CancelStatic {\n  new (message?: string): Cancel;\n}\n\nexport interface Cancel {\n  message: string;\n}\n\nexport interface Canceler {\n  (message?: string): void;\n}\n\nexport interface CancelTokenStatic {\n  new (executor: (cancel: Canceler) => void): CancelToken;\n  source(): CancelTokenSource;\n}\n\nexport interface CancelToken {\n  promise: Promise<Cancel>;\n  reason?: Cancel;\n  throwIfRequested(): void;\n}\n\nexport interface CancelTokenSource {\n  token: CancelToken;\n  cancel: Canceler;\n}\n\nexport interface AxiosInterceptorManager<V> {\n  use(onFulfilled?: (value: V) => V | Promise<V>, onRejected?: (error: any) => any): number;\n  eject(id: number): void;\n}\n\nexport interface AxiosInstance {\n  (config: AxiosRequestConfig): AxiosPromise;\n  (url: string, config?: AxiosRequestConfig): AxiosPromise;\n  defaults: AxiosRequestConfig;\n  interceptors: {\n    request: AxiosInterceptorManager<AxiosRequestConfig>;\n    response: AxiosInterceptorManager<AxiosResponse>;\n  };\n  getUri(config?: AxiosRequestConfig): string;\n  request<T = any, R = AxiosResponse<T>> (config: AxiosRequestConfig): Promise<R>;\n  get<T = any, R = AxiosResponse<T>>(url: string, config?: AxiosRequestConfig): Promise<R>;\n  delete<T = any, R = AxiosResponse<T>>(url: string, config?: AxiosRequestConfig): Promise<R>;\n  head<T = any, R = AxiosResponse<T>>(url: string, config?: AxiosRequestConfig): Promise<R>;\n  options<T = any, R = AxiosResponse<T>>(url: string, config?: AxiosRequestConfig): Promise<R>;\n  post<T = any, R = AxiosResponse<T>>(url: string, data?: any, config?: AxiosRequestConfig): Promise<R>;\n  put<T = any, R = AxiosResponse<T>>(url: string, data?: any, config?: AxiosRequestConfig): Promise<R>;\n  patch<T = any, R = AxiosResponse<T>>(url: string, data?: any, config?: AxiosRequestConfig): Promise<R>;\n}\n\nexport interface AxiosStatic extends AxiosInstance {\n  create(config?: AxiosRequestConfig): AxiosInstance;\n  Cancel: CancelStatic;\n  CancelToken: CancelTokenStatic;\n  isCancel(value: any): boolean;\n  all<T>(values: (T | Promise<T>)[]): Promise<T[]>;\n  spread<T, R>(callback: (...args: T[]) => R): (array: T[]) => R;\n  isAxiosError(payload: any): payload is AxiosError;\n}\n\ndeclare const axios: AxiosStatic;\n\nexport default axios;\n","// https://stackoverflow.com/a/3969760\nexport default class Timer {\n  constructor(callback, delay) {\n    this.startedAt = Date.now()\n    this.callback = callback\n    this.delay = delay\n\n    this.timer = setTimeout(callback, delay)\n  }\n\n  pause() {\n    this.stop()\n    this.delay -= Date.now() - this.startedAt\n  }\n\n  resume() {\n    this.stop()\n    this.startedAt = Date.now()\n    this.timer = setTimeout(this.callback, this.delay)\n  }\n\n  stop() {\n    clearTimeout(this.timer)\n  }\n}\n","const POSITIONS = {\n  TOP_RIGHT: 'top-right',\n  TOP: 'top',\n  TOP_LEFT: 'top-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  BOTTOM: 'bottom',\n  BOTTOM_LEFT: 'bottom-left'\n}\nexport default Object.freeze(POSITIONS)\n\nexport function definePosition(position, top, bottom) {\n  let result = null\n  switch (position) {\n    case POSITIONS.TOP:\n    case POSITIONS.TOP_RIGHT:\n    case POSITIONS.TOP_LEFT:\n      result = top\n      break\n\n    case POSITIONS.BOTTOM:\n    case POSITIONS.BOTTOM_RIGHT:\n    case POSITIONS.BOTTOM_LEFT:\n      result = bottom\n      break\n  }\n  return result\n}\n","class Event {\n  constructor() {\n    this.queue = {}\n  }\n\n  $on(name, callback) {\n    this.queue[name] = this.queue[name] || []\n    this.queue[name].push(callback)\n  }\n\n  $off(name, callback) {\n    if (this.queue[name]) {\n      for (var i = 0; i < this.queue[name].length; i++) {\n        if (this.queue[name][i] === callback) {\n          this.queue[name].splice(i, 1)\n          break\n        }\n      }\n    }\n  }\n\n  $emit(name, data) {\n    if (this.queue[name]) {\n      this.queue[name].forEach(function (callback) {\n        callback(data)\n      })\n    }\n  }\n}\n\nexport default new Event()\n","<template>\n  <transition\n    :enter-active-class=\"transition.enter\"\n    :leave-active-class=\"transition.leave\"\n  >\n    <div\n      v-show=\"isActive\"\n      :class=\"['c-toast', `c-toast--${type}`, `c-toast--${position}`]\"\n      @mouseover=\"toggleTimer(true)\"\n      @mouseleave=\"toggleTimer(false)\"\n      @click=\"click\"\n      role=\"alert\"\n      v-html=\"message\"\n    />\n  </transition>\n</template>\n\n<script>\nimport { removeElement } from './helpers/remove-element'\nimport Timer from './helpers/timer'\nimport Positions, { definePosition } from './defaults/positions'\nimport eventBus from './helpers/event-bus'\n\nexport default {\n  name: 'toast',\n  props: {\n    message: {\n      type: String,\n      required: true\n    },\n    type: {\n      type: String,\n      default: 'default'\n    },\n    position: {\n      type: String,\n      default: Positions.BOTTOM_RIGHT,\n      validator(value) {\n        return Object.values(Positions).includes(value)\n      }\n    },\n    maxToasts: {\n      type: [Number, Boolean],\n      default: false\n    },\n    duration: {\n      type: [Number, Boolean],\n      default: 4000\n    },\n    dismissible: {\n      type: Boolean,\n      default: true\n    },\n    queue: {\n      type: Boolean,\n      default: false\n    },\n    pauseOnHover: {\n      type: Boolean,\n      default: true\n    },\n    useDefaultCss: {\n      type: Boolean,\n      default: true\n    },\n    onClose: {\n      type: Function,\n      default: () => {}\n    },\n    onClick: {\n      type: Function,\n      default: () => {}\n    }\n  },\n  data() {\n    return {\n      isActive: false,\n      parentTop: null,\n      parentBottom: null,\n      isHovered: false,\n      timer: null\n    }\n  },\n  beforeMount() {\n    this.createParents()\n    this.setDefaultCss()\n    this.setupContainer()\n  },\n  mounted() {\n    this.showNotice()\n    eventBus.$on('toast-clear', this.close)\n  },\n  methods: {\n    createParents() {\n      this.parentTop = document.querySelector('.c-toast-container--top')\n      this.parentBottom = document.querySelector('.c-toast-container--bottom')\n\n      if (this.parentTop && this.parentBottom) return\n\n      if (!this.parentTop) {\n        this.parentTop = document.createElement('div')\n        this.parentTop.className = 'c-toast-container c-toast-container--top'\n      }\n\n      if (!this.parentBottom) {\n        this.parentBottom = document.createElement('div')\n        this.parentBottom.className =\n          'c-toast-container c-toast-container--bottom'\n      }\n    },\n    setDefaultCss() {\n      const type = this.useDefaultCss ? 'add' : 'remove'\n      this.parentTop.classList[type]('v--default-css')\n      this.parentBottom.classList[type]('v--default-css')\n    },\n    setupContainer() {\n      const container = document.body\n      container.appendChild(this.parentTop)\n      container.appendChild(this.parentBottom)\n    },\n    shouldQueue() {\n      if (!this.queue && this.maxToasts === false) {\n        return false\n      }\n\n      if (this.maxToasts !== false) {\n        return (\n          this.maxToasts <=\n          this.parentTop.childElementCount + this.parentBottom.childElementCount\n        )\n      }\n\n      return (\n        this.parentTop.childElementCount > 0 ||\n        this.parentBottom.childElementCount > 0\n      )\n    },\n    showNotice() {\n      if (this.shouldQueue()) {\n        this.queueTimer = setTimeout(this.showNotice, 250)\n        return\n      }\n\n      this.correctParent.insertAdjacentElement('afterbegin', this.$el)\n      this.isActive = true\n\n      this.timer =\n        this.duration !== false ? new Timer(this.close, this.duration) : null\n    },\n    click() {\n      this.onClick.apply(null, arguments)\n\n      if (this.dismissible) {\n        this.close()\n      }\n    },\n    toggleTimer(newVal) {\n      if (this.timer && this.pauseOnHover) {\n        newVal ? this.timer.pause() : this.timer.resume()\n      }\n    },\n    stopTimer() {\n      this.timer && this.timer.stop()\n      clearTimeout(this.queueTimer)\n    },\n    close() {\n      this.stopTimer()\n      this.isActive = false\n      setTimeout(() => {\n        this.onClose.apply(null, arguments)\n        removeElement(this.$el)\n      }, 150)\n    }\n  },\n  computed: {\n    correctParent() {\n      return definePosition(this.position, this.parentTop, this.parentBottom)\n    },\n    transition() {\n      return definePosition(\n        this.position,\n        {\n          enter: 'fadeInDown',\n          leave: 'fadeOut'\n        },\n        {\n          enter: 'fadeInUp',\n          leave: 'fadeOut'\n        }\n      )\n    }\n  },\n  beforeUnmount() {\n    eventBus.$off('toast-clear', this.close)\n  }\n}\n</script>\n<style lang=\"stylus\">\n@import './themes/default/index.styl'\n.v--default-css\n  @import './themes/default/colors.styl'\n  @import './themes/default/toast.styl'\n</style>\n","const removeElement = (el) => {\n  if (typeof el.remove !== 'undefined') {\n    el.remove()\n  } else {\n    el.parentNode.removeChild(el)\n  }\n}\n\nexport { removeElement }\n","import { render, h } from 'vue'\n\nconst createElement = () =>\n  typeof document !== 'undefined' && document.createElement('div')\n\nconst mount = (component, { props, children, element, app } = {}) => {\n  let el = element ? element : createElement()\n\n  let vNode = h(component, props, children)\n  if (app && app._context) {\n    vNode.appContext = app._context\n  }\n\n  render(vNode, el)\n\n  const destroy = () => {\n    if (el) {\n      render(null, el)\n    }\n    el = null\n    vNode = null\n  }\n\n  return { vNode, destroy, el }\n}\n\nexport default mount\n","import Toaster from './Toaster.vue'\nimport eventBus from './helpers/event-bus.js'\nimport mount from './helpers/mount-component'\n\nconst Api = (globalOptions = {}) => {\n  return {\n    show(message, options = {}) {\n      let localOptions = { message, ...options }\n      const c = mount(Toaster, {\n        props: { ...globalOptions, ...localOptions }\n      })\n      return c\n    },\n    clear() {\n      eventBus.$emit('toast-clear')\n    },\n    success(message, options = {}) {\n      options.type = 'success'\n      return this.show(message, options)\n    },\n    error(message, options = {}) {\n      options.type = 'error'\n      return this.show(message, options)\n    },\n    info(message, options = {}) {\n      options.type = 'info'\n      return this.show(message, options)\n    },\n    warning(message, options = {}) {\n      options.type = 'warning'\n      return this.show(message, options)\n    }\n  }\n}\n\nexport default Api\n","/**!\n * Sortable 1.10.2\n * @author\tRubaXa   <trash@rubaxa.org>\n * @author\towenm    <owen23355@gmail.com>\n * @license MIT\n */\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nvar version = \"1.10.2\";\n\nfunction userAgent(pattern) {\n  if (typeof window !== 'undefined' && window.navigator) {\n    return !!\n    /*@__PURE__*/\n    navigator.userAgent.match(pattern);\n  }\n}\n\nvar IE11OrLess = userAgent(/(?:Trident.*rv[ :]?11\\.|msie|iemobile|Windows Phone)/i);\nvar Edge = userAgent(/Edge/i);\nvar FireFox = userAgent(/firefox/i);\nvar Safari = userAgent(/safari/i) && !userAgent(/chrome/i) && !userAgent(/android/i);\nvar IOS = userAgent(/iP(ad|od|hone)/i);\nvar ChromeForAndroid = userAgent(/chrome/i) && userAgent(/android/i);\n\nvar captureMode = {\n  capture: false,\n  passive: false\n};\n\nfunction on(el, event, fn) {\n  el.addEventListener(event, fn, !IE11OrLess && captureMode);\n}\n\nfunction off(el, event, fn) {\n  el.removeEventListener(event, fn, !IE11OrLess && captureMode);\n}\n\nfunction matches(\n/**HTMLElement*/\nel,\n/**String*/\nselector) {\n  if (!selector) return;\n  selector[0] === '>' && (selector = selector.substring(1));\n\n  if (el) {\n    try {\n      if (el.matches) {\n        return el.matches(selector);\n      } else if (el.msMatchesSelector) {\n        return el.msMatchesSelector(selector);\n      } else if (el.webkitMatchesSelector) {\n        return el.webkitMatchesSelector(selector);\n      }\n    } catch (_) {\n      return false;\n    }\n  }\n\n  return false;\n}\n\nfunction getParentOrHost(el) {\n  return el.host && el !== document && el.host.nodeType ? el.host : el.parentNode;\n}\n\nfunction closest(\n/**HTMLElement*/\nel,\n/**String*/\nselector,\n/**HTMLElement*/\nctx, includeCTX) {\n  if (el) {\n    ctx = ctx || document;\n\n    do {\n      if (selector != null && (selector[0] === '>' ? el.parentNode === ctx && matches(el, selector) : matches(el, selector)) || includeCTX && el === ctx) {\n        return el;\n      }\n\n      if (el === ctx) break;\n      /* jshint boss:true */\n    } while (el = getParentOrHost(el));\n  }\n\n  return null;\n}\n\nvar R_SPACE = /\\s+/g;\n\nfunction toggleClass(el, name, state) {\n  if (el && name) {\n    if (el.classList) {\n      el.classList[state ? 'add' : 'remove'](name);\n    } else {\n      var className = (' ' + el.className + ' ').replace(R_SPACE, ' ').replace(' ' + name + ' ', ' ');\n      el.className = (className + (state ? ' ' + name : '')).replace(R_SPACE, ' ');\n    }\n  }\n}\n\nfunction css(el, prop, val) {\n  var style = el && el.style;\n\n  if (style) {\n    if (val === void 0) {\n      if (document.defaultView && document.defaultView.getComputedStyle) {\n        val = document.defaultView.getComputedStyle(el, '');\n      } else if (el.currentStyle) {\n        val = el.currentStyle;\n      }\n\n      return prop === void 0 ? val : val[prop];\n    } else {\n      if (!(prop in style) && prop.indexOf('webkit') === -1) {\n        prop = '-webkit-' + prop;\n      }\n\n      style[prop] = val + (typeof val === 'string' ? '' : 'px');\n    }\n  }\n}\n\nfunction matrix(el, selfOnly) {\n  var appliedTransforms = '';\n\n  if (typeof el === 'string') {\n    appliedTransforms = el;\n  } else {\n    do {\n      var transform = css(el, 'transform');\n\n      if (transform && transform !== 'none') {\n        appliedTransforms = transform + ' ' + appliedTransforms;\n      }\n      /* jshint boss:true */\n\n    } while (!selfOnly && (el = el.parentNode));\n  }\n\n  var matrixFn = window.DOMMatrix || window.WebKitCSSMatrix || window.CSSMatrix || window.MSCSSMatrix;\n  /*jshint -W056 */\n\n  return matrixFn && new matrixFn(appliedTransforms);\n}\n\nfunction find(ctx, tagName, iterator) {\n  if (ctx) {\n    var list = ctx.getElementsByTagName(tagName),\n        i = 0,\n        n = list.length;\n\n    if (iterator) {\n      for (; i < n; i++) {\n        iterator(list[i], i);\n      }\n    }\n\n    return list;\n  }\n\n  return [];\n}\n\nfunction getWindowScrollingElement() {\n  var scrollingElement = document.scrollingElement;\n\n  if (scrollingElement) {\n    return scrollingElement;\n  } else {\n    return document.documentElement;\n  }\n}\n/**\r\n * Returns the \"bounding client rect\" of given element\r\n * @param  {HTMLElement} el                       The element whose boundingClientRect is wanted\r\n * @param  {[Boolean]} relativeToContainingBlock  Whether the rect should be relative to the containing block of (including) the container\r\n * @param  {[Boolean]} relativeToNonStaticParent  Whether the rect should be relative to the relative parent of (including) the contaienr\r\n * @param  {[Boolean]} undoScale                  Whether the container's scale() should be undone\r\n * @param  {[HTMLElement]} container              The parent the element will be placed in\r\n * @return {Object}                               The boundingClientRect of el, with specified adjustments\r\n */\n\n\nfunction getRect(el, relativeToContainingBlock, relativeToNonStaticParent, undoScale, container) {\n  if (!el.getBoundingClientRect && el !== window) return;\n  var elRect, top, left, bottom, right, height, width;\n\n  if (el !== window && el !== getWindowScrollingElement()) {\n    elRect = el.getBoundingClientRect();\n    top = elRect.top;\n    left = elRect.left;\n    bottom = elRect.bottom;\n    right = elRect.right;\n    height = elRect.height;\n    width = elRect.width;\n  } else {\n    top = 0;\n    left = 0;\n    bottom = window.innerHeight;\n    right = window.innerWidth;\n    height = window.innerHeight;\n    width = window.innerWidth;\n  }\n\n  if ((relativeToContainingBlock || relativeToNonStaticParent) && el !== window) {\n    // Adjust for translate()\n    container = container || el.parentNode; // solves #1123 (see: https://stackoverflow.com/a/37953806/6088312)\n    // Not needed on <= IE11\n\n    if (!IE11OrLess) {\n      do {\n        if (container && container.getBoundingClientRect && (css(container, 'transform') !== 'none' || relativeToNonStaticParent && css(container, 'position') !== 'static')) {\n          var containerRect = container.getBoundingClientRect(); // Set relative to edges of padding box of container\n\n          top -= containerRect.top + parseInt(css(container, 'border-top-width'));\n          left -= containerRect.left + parseInt(css(container, 'border-left-width'));\n          bottom = top + elRect.height;\n          right = left + elRect.width;\n          break;\n        }\n        /* jshint boss:true */\n\n      } while (container = container.parentNode);\n    }\n  }\n\n  if (undoScale && el !== window) {\n    // Adjust for scale()\n    var elMatrix = matrix(container || el),\n        scaleX = elMatrix && elMatrix.a,\n        scaleY = elMatrix && elMatrix.d;\n\n    if (elMatrix) {\n      top /= scaleY;\n      left /= scaleX;\n      width /= scaleX;\n      height /= scaleY;\n      bottom = top + height;\n      right = left + width;\n    }\n  }\n\n  return {\n    top: top,\n    left: left,\n    bottom: bottom,\n    right: right,\n    width: width,\n    height: height\n  };\n}\n/**\r\n * Checks if a side of an element is scrolled past a side of its parents\r\n * @param  {HTMLElement}  el           The element who's side being scrolled out of view is in question\r\n * @param  {String}       elSide       Side of the element in question ('top', 'left', 'right', 'bottom')\r\n * @param  {String}       parentSide   Side of the parent in question ('top', 'left', 'right', 'bottom')\r\n * @return {HTMLElement}               The parent scroll element that the el's side is scrolled past, or null if there is no such element\r\n */\n\n\nfunction isScrolledPast(el, elSide, parentSide) {\n  var parent = getParentAutoScrollElement(el, true),\n      elSideVal = getRect(el)[elSide];\n  /* jshint boss:true */\n\n  while (parent) {\n    var parentSideVal = getRect(parent)[parentSide],\n        visible = void 0;\n\n    if (parentSide === 'top' || parentSide === 'left') {\n      visible = elSideVal >= parentSideVal;\n    } else {\n      visible = elSideVal <= parentSideVal;\n    }\n\n    if (!visible) return parent;\n    if (parent === getWindowScrollingElement()) break;\n    parent = getParentAutoScrollElement(parent, false);\n  }\n\n  return false;\n}\n/**\r\n * Gets nth child of el, ignoring hidden children, sortable's elements (does not ignore clone if it's visible)\r\n * and non-draggable elements\r\n * @param  {HTMLElement} el       The parent element\r\n * @param  {Number} childNum      The index of the child\r\n * @param  {Object} options       Parent Sortable's options\r\n * @return {HTMLElement}          The child at index childNum, or null if not found\r\n */\n\n\nfunction getChild(el, childNum, options) {\n  var currentChild = 0,\n      i = 0,\n      children = el.children;\n\n  while (i < children.length) {\n    if (children[i].style.display !== 'none' && children[i] !== Sortable.ghost && children[i] !== Sortable.dragged && closest(children[i], options.draggable, el, false)) {\n      if (currentChild === childNum) {\n        return children[i];\n      }\n\n      currentChild++;\n    }\n\n    i++;\n  }\n\n  return null;\n}\n/**\r\n * Gets the last child in the el, ignoring ghostEl or invisible elements (clones)\r\n * @param  {HTMLElement} el       Parent element\r\n * @param  {selector} selector    Any other elements that should be ignored\r\n * @return {HTMLElement}          The last child, ignoring ghostEl\r\n */\n\n\nfunction lastChild(el, selector) {\n  var last = el.lastElementChild;\n\n  while (last && (last === Sortable.ghost || css(last, 'display') === 'none' || selector && !matches(last, selector))) {\n    last = last.previousElementSibling;\n  }\n\n  return last || null;\n}\n/**\r\n * Returns the index of an element within its parent for a selected set of\r\n * elements\r\n * @param  {HTMLElement} el\r\n * @param  {selector} selector\r\n * @return {number}\r\n */\n\n\nfunction index(el, selector) {\n  var index = 0;\n\n  if (!el || !el.parentNode) {\n    return -1;\n  }\n  /* jshint boss:true */\n\n\n  while (el = el.previousElementSibling) {\n    if (el.nodeName.toUpperCase() !== 'TEMPLATE' && el !== Sortable.clone && (!selector || matches(el, selector))) {\n      index++;\n    }\n  }\n\n  return index;\n}\n/**\r\n * Returns the scroll offset of the given element, added with all the scroll offsets of parent elements.\r\n * The value is returned in real pixels.\r\n * @param  {HTMLElement} el\r\n * @return {Array}             Offsets in the format of [left, top]\r\n */\n\n\nfunction getRelativeScrollOffset(el) {\n  var offsetLeft = 0,\n      offsetTop = 0,\n      winScroller = getWindowScrollingElement();\n\n  if (el) {\n    do {\n      var elMatrix = matrix(el),\n          scaleX = elMatrix.a,\n          scaleY = elMatrix.d;\n      offsetLeft += el.scrollLeft * scaleX;\n      offsetTop += el.scrollTop * scaleY;\n    } while (el !== winScroller && (el = el.parentNode));\n  }\n\n  return [offsetLeft, offsetTop];\n}\n/**\r\n * Returns the index of the object within the given array\r\n * @param  {Array} arr   Array that may or may not hold the object\r\n * @param  {Object} obj  An object that has a key-value pair unique to and identical to a key-value pair in the object you want to find\r\n * @return {Number}      The index of the object in the array, or -1\r\n */\n\n\nfunction indexOfObject(arr, obj) {\n  for (var i in arr) {\n    if (!arr.hasOwnProperty(i)) continue;\n\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key) && obj[key] === arr[i][key]) return Number(i);\n    }\n  }\n\n  return -1;\n}\n\nfunction getParentAutoScrollElement(el, includeSelf) {\n  // skip to window\n  if (!el || !el.getBoundingClientRect) return getWindowScrollingElement();\n  var elem = el;\n  var gotSelf = false;\n\n  do {\n    // we don't need to get elem css if it isn't even overflowing in the first place (performance)\n    if (elem.clientWidth < elem.scrollWidth || elem.clientHeight < elem.scrollHeight) {\n      var elemCSS = css(elem);\n\n      if (elem.clientWidth < elem.scrollWidth && (elemCSS.overflowX == 'auto' || elemCSS.overflowX == 'scroll') || elem.clientHeight < elem.scrollHeight && (elemCSS.overflowY == 'auto' || elemCSS.overflowY == 'scroll')) {\n        if (!elem.getBoundingClientRect || elem === document.body) return getWindowScrollingElement();\n        if (gotSelf || includeSelf) return elem;\n        gotSelf = true;\n      }\n    }\n    /* jshint boss:true */\n\n  } while (elem = elem.parentNode);\n\n  return getWindowScrollingElement();\n}\n\nfunction extend(dst, src) {\n  if (dst && src) {\n    for (var key in src) {\n      if (src.hasOwnProperty(key)) {\n        dst[key] = src[key];\n      }\n    }\n  }\n\n  return dst;\n}\n\nfunction isRectEqual(rect1, rect2) {\n  return Math.round(rect1.top) === Math.round(rect2.top) && Math.round(rect1.left) === Math.round(rect2.left) && Math.round(rect1.height) === Math.round(rect2.height) && Math.round(rect1.width) === Math.round(rect2.width);\n}\n\nvar _throttleTimeout;\n\nfunction throttle(callback, ms) {\n  return function () {\n    if (!_throttleTimeout) {\n      var args = arguments,\n          _this = this;\n\n      if (args.length === 1) {\n        callback.call(_this, args[0]);\n      } else {\n        callback.apply(_this, args);\n      }\n\n      _throttleTimeout = setTimeout(function () {\n        _throttleTimeout = void 0;\n      }, ms);\n    }\n  };\n}\n\nfunction cancelThrottle() {\n  clearTimeout(_throttleTimeout);\n  _throttleTimeout = void 0;\n}\n\nfunction scrollBy(el, x, y) {\n  el.scrollLeft += x;\n  el.scrollTop += y;\n}\n\nfunction clone(el) {\n  var Polymer = window.Polymer;\n  var $ = window.jQuery || window.Zepto;\n\n  if (Polymer && Polymer.dom) {\n    return Polymer.dom(el).cloneNode(true);\n  } else if ($) {\n    return $(el).clone(true)[0];\n  } else {\n    return el.cloneNode(true);\n  }\n}\n\nfunction setRect(el, rect) {\n  css(el, 'position', 'absolute');\n  css(el, 'top', rect.top);\n  css(el, 'left', rect.left);\n  css(el, 'width', rect.width);\n  css(el, 'height', rect.height);\n}\n\nfunction unsetRect(el) {\n  css(el, 'position', '');\n  css(el, 'top', '');\n  css(el, 'left', '');\n  css(el, 'width', '');\n  css(el, 'height', '');\n}\n\nvar expando = 'Sortable' + new Date().getTime();\n\nfunction AnimationStateManager() {\n  var animationStates = [],\n      animationCallbackId;\n  return {\n    captureAnimationState: function captureAnimationState() {\n      animationStates = [];\n      if (!this.options.animation) return;\n      var children = [].slice.call(this.el.children);\n      children.forEach(function (child) {\n        if (css(child, 'display') === 'none' || child === Sortable.ghost) return;\n        animationStates.push({\n          target: child,\n          rect: getRect(child)\n        });\n\n        var fromRect = _objectSpread({}, animationStates[animationStates.length - 1].rect); // If animating: compensate for current animation\n\n\n        if (child.thisAnimationDuration) {\n          var childMatrix = matrix(child, true);\n\n          if (childMatrix) {\n            fromRect.top -= childMatrix.f;\n            fromRect.left -= childMatrix.e;\n          }\n        }\n\n        child.fromRect = fromRect;\n      });\n    },\n    addAnimationState: function addAnimationState(state) {\n      animationStates.push(state);\n    },\n    removeAnimationState: function removeAnimationState(target) {\n      animationStates.splice(indexOfObject(animationStates, {\n        target: target\n      }), 1);\n    },\n    animateAll: function animateAll(callback) {\n      var _this = this;\n\n      if (!this.options.animation) {\n        clearTimeout(animationCallbackId);\n        if (typeof callback === 'function') callback();\n        return;\n      }\n\n      var animating = false,\n          animationTime = 0;\n      animationStates.forEach(function (state) {\n        var time = 0,\n            target = state.target,\n            fromRect = target.fromRect,\n            toRect = getRect(target),\n            prevFromRect = target.prevFromRect,\n            prevToRect = target.prevToRect,\n            animatingRect = state.rect,\n            targetMatrix = matrix(target, true);\n\n        if (targetMatrix) {\n          // Compensate for current animation\n          toRect.top -= targetMatrix.f;\n          toRect.left -= targetMatrix.e;\n        }\n\n        target.toRect = toRect;\n\n        if (target.thisAnimationDuration) {\n          // Could also check if animatingRect is between fromRect and toRect\n          if (isRectEqual(prevFromRect, toRect) && !isRectEqual(fromRect, toRect) && // Make sure animatingRect is on line between toRect & fromRect\n          (animatingRect.top - toRect.top) / (animatingRect.left - toRect.left) === (fromRect.top - toRect.top) / (fromRect.left - toRect.left)) {\n            // If returning to same place as started from animation and on same axis\n            time = calculateRealTime(animatingRect, prevFromRect, prevToRect, _this.options);\n          }\n        } // if fromRect != toRect: animate\n\n\n        if (!isRectEqual(toRect, fromRect)) {\n          target.prevFromRect = fromRect;\n          target.prevToRect = toRect;\n\n          if (!time) {\n            time = _this.options.animation;\n          }\n\n          _this.animate(target, animatingRect, toRect, time);\n        }\n\n        if (time) {\n          animating = true;\n          animationTime = Math.max(animationTime, time);\n          clearTimeout(target.animationResetTimer);\n          target.animationResetTimer = setTimeout(function () {\n            target.animationTime = 0;\n            target.prevFromRect = null;\n            target.fromRect = null;\n            target.prevToRect = null;\n            target.thisAnimationDuration = null;\n          }, time);\n          target.thisAnimationDuration = time;\n        }\n      });\n      clearTimeout(animationCallbackId);\n\n      if (!animating) {\n        if (typeof callback === 'function') callback();\n      } else {\n        animationCallbackId = setTimeout(function () {\n          if (typeof callback === 'function') callback();\n        }, animationTime);\n      }\n\n      animationStates = [];\n    },\n    animate: function animate(target, currentRect, toRect, duration) {\n      if (duration) {\n        css(target, 'transition', '');\n        css(target, 'transform', '');\n        var elMatrix = matrix(this.el),\n            scaleX = elMatrix && elMatrix.a,\n            scaleY = elMatrix && elMatrix.d,\n            translateX = (currentRect.left - toRect.left) / (scaleX || 1),\n            translateY = (currentRect.top - toRect.top) / (scaleY || 1);\n        target.animatingX = !!translateX;\n        target.animatingY = !!translateY;\n        css(target, 'transform', 'translate3d(' + translateX + 'px,' + translateY + 'px,0)');\n        repaint(target); // repaint\n\n        css(target, 'transition', 'transform ' + duration + 'ms' + (this.options.easing ? ' ' + this.options.easing : ''));\n        css(target, 'transform', 'translate3d(0,0,0)');\n        typeof target.animated === 'number' && clearTimeout(target.animated);\n        target.animated = setTimeout(function () {\n          css(target, 'transition', '');\n          css(target, 'transform', '');\n          target.animated = false;\n          target.animatingX = false;\n          target.animatingY = false;\n        }, duration);\n      }\n    }\n  };\n}\n\nfunction repaint(target) {\n  return target.offsetWidth;\n}\n\nfunction calculateRealTime(animatingRect, fromRect, toRect, options) {\n  return Math.sqrt(Math.pow(fromRect.top - animatingRect.top, 2) + Math.pow(fromRect.left - animatingRect.left, 2)) / Math.sqrt(Math.pow(fromRect.top - toRect.top, 2) + Math.pow(fromRect.left - toRect.left, 2)) * options.animation;\n}\n\nvar plugins = [];\nvar defaults = {\n  initializeByDefault: true\n};\nvar PluginManager = {\n  mount: function mount(plugin) {\n    // Set default static properties\n    for (var option in defaults) {\n      if (defaults.hasOwnProperty(option) && !(option in plugin)) {\n        plugin[option] = defaults[option];\n      }\n    }\n\n    plugins.push(plugin);\n  },\n  pluginEvent: function pluginEvent(eventName, sortable, evt) {\n    var _this = this;\n\n    this.eventCanceled = false;\n\n    evt.cancel = function () {\n      _this.eventCanceled = true;\n    };\n\n    var eventNameGlobal = eventName + 'Global';\n    plugins.forEach(function (plugin) {\n      if (!sortable[plugin.pluginName]) return; // Fire global events if it exists in this sortable\n\n      if (sortable[plugin.pluginName][eventNameGlobal]) {\n        sortable[plugin.pluginName][eventNameGlobal](_objectSpread({\n          sortable: sortable\n        }, evt));\n      } // Only fire plugin event if plugin is enabled in this sortable,\n      // and plugin has event defined\n\n\n      if (sortable.options[plugin.pluginName] && sortable[plugin.pluginName][eventName]) {\n        sortable[plugin.pluginName][eventName](_objectSpread({\n          sortable: sortable\n        }, evt));\n      }\n    });\n  },\n  initializePlugins: function initializePlugins(sortable, el, defaults, options) {\n    plugins.forEach(function (plugin) {\n      var pluginName = plugin.pluginName;\n      if (!sortable.options[pluginName] && !plugin.initializeByDefault) return;\n      var initialized = new plugin(sortable, el, sortable.options);\n      initialized.sortable = sortable;\n      initialized.options = sortable.options;\n      sortable[pluginName] = initialized; // Add default options from plugin\n\n      _extends(defaults, initialized.defaults);\n    });\n\n    for (var option in sortable.options) {\n      if (!sortable.options.hasOwnProperty(option)) continue;\n      var modified = this.modifyOption(sortable, option, sortable.options[option]);\n\n      if (typeof modified !== 'undefined') {\n        sortable.options[option] = modified;\n      }\n    }\n  },\n  getEventProperties: function getEventProperties(name, sortable) {\n    var eventProperties = {};\n    plugins.forEach(function (plugin) {\n      if (typeof plugin.eventProperties !== 'function') return;\n\n      _extends(eventProperties, plugin.eventProperties.call(sortable[plugin.pluginName], name));\n    });\n    return eventProperties;\n  },\n  modifyOption: function modifyOption(sortable, name, value) {\n    var modifiedValue;\n    plugins.forEach(function (plugin) {\n      // Plugin must exist on the Sortable\n      if (!sortable[plugin.pluginName]) return; // If static option listener exists for this option, call in the context of the Sortable's instance of this plugin\n\n      if (plugin.optionListeners && typeof plugin.optionListeners[name] === 'function') {\n        modifiedValue = plugin.optionListeners[name].call(sortable[plugin.pluginName], value);\n      }\n    });\n    return modifiedValue;\n  }\n};\n\nfunction dispatchEvent(_ref) {\n  var sortable = _ref.sortable,\n      rootEl = _ref.rootEl,\n      name = _ref.name,\n      targetEl = _ref.targetEl,\n      cloneEl = _ref.cloneEl,\n      toEl = _ref.toEl,\n      fromEl = _ref.fromEl,\n      oldIndex = _ref.oldIndex,\n      newIndex = _ref.newIndex,\n      oldDraggableIndex = _ref.oldDraggableIndex,\n      newDraggableIndex = _ref.newDraggableIndex,\n      originalEvent = _ref.originalEvent,\n      putSortable = _ref.putSortable,\n      extraEventProperties = _ref.extraEventProperties;\n  sortable = sortable || rootEl && rootEl[expando];\n  if (!sortable) return;\n  var evt,\n      options = sortable.options,\n      onName = 'on' + name.charAt(0).toUpperCase() + name.substr(1); // Support for new CustomEvent feature\n\n  if (window.CustomEvent && !IE11OrLess && !Edge) {\n    evt = new CustomEvent(name, {\n      bubbles: true,\n      cancelable: true\n    });\n  } else {\n    evt = document.createEvent('Event');\n    evt.initEvent(name, true, true);\n  }\n\n  evt.to = toEl || rootEl;\n  evt.from = fromEl || rootEl;\n  evt.item = targetEl || rootEl;\n  evt.clone = cloneEl;\n  evt.oldIndex = oldIndex;\n  evt.newIndex = newIndex;\n  evt.oldDraggableIndex = oldDraggableIndex;\n  evt.newDraggableIndex = newDraggableIndex;\n  evt.originalEvent = originalEvent;\n  evt.pullMode = putSortable ? putSortable.lastPutMode : undefined;\n\n  var allEventProperties = _objectSpread({}, extraEventProperties, PluginManager.getEventProperties(name, sortable));\n\n  for (var option in allEventProperties) {\n    evt[option] = allEventProperties[option];\n  }\n\n  if (rootEl) {\n    rootEl.dispatchEvent(evt);\n  }\n\n  if (options[onName]) {\n    options[onName].call(sortable, evt);\n  }\n}\n\nvar pluginEvent = function pluginEvent(eventName, sortable) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      originalEvent = _ref.evt,\n      data = _objectWithoutProperties(_ref, [\"evt\"]);\n\n  PluginManager.pluginEvent.bind(Sortable)(eventName, sortable, _objectSpread({\n    dragEl: dragEl,\n    parentEl: parentEl,\n    ghostEl: ghostEl,\n    rootEl: rootEl,\n    nextEl: nextEl,\n    lastDownEl: lastDownEl,\n    cloneEl: cloneEl,\n    cloneHidden: cloneHidden,\n    dragStarted: moved,\n    putSortable: putSortable,\n    activeSortable: Sortable.active,\n    originalEvent: originalEvent,\n    oldIndex: oldIndex,\n    oldDraggableIndex: oldDraggableIndex,\n    newIndex: newIndex,\n    newDraggableIndex: newDraggableIndex,\n    hideGhostForTarget: _hideGhostForTarget,\n    unhideGhostForTarget: _unhideGhostForTarget,\n    cloneNowHidden: function cloneNowHidden() {\n      cloneHidden = true;\n    },\n    cloneNowShown: function cloneNowShown() {\n      cloneHidden = false;\n    },\n    dispatchSortableEvent: function dispatchSortableEvent(name) {\n      _dispatchEvent({\n        sortable: sortable,\n        name: name,\n        originalEvent: originalEvent\n      });\n    }\n  }, data));\n};\n\nfunction _dispatchEvent(info) {\n  dispatchEvent(_objectSpread({\n    putSortable: putSortable,\n    cloneEl: cloneEl,\n    targetEl: dragEl,\n    rootEl: rootEl,\n    oldIndex: oldIndex,\n    oldDraggableIndex: oldDraggableIndex,\n    newIndex: newIndex,\n    newDraggableIndex: newDraggableIndex\n  }, info));\n}\n\nvar dragEl,\n    parentEl,\n    ghostEl,\n    rootEl,\n    nextEl,\n    lastDownEl,\n    cloneEl,\n    cloneHidden,\n    oldIndex,\n    newIndex,\n    oldDraggableIndex,\n    newDraggableIndex,\n    activeGroup,\n    putSortable,\n    awaitingDragStarted = false,\n    ignoreNextClick = false,\n    sortables = [],\n    tapEvt,\n    touchEvt,\n    lastDx,\n    lastDy,\n    tapDistanceLeft,\n    tapDistanceTop,\n    moved,\n    lastTarget,\n    lastDirection,\n    pastFirstInvertThresh = false,\n    isCircumstantialInvert = false,\n    targetMoveDistance,\n    // For positioning ghost absolutely\nghostRelativeParent,\n    ghostRelativeParentInitialScroll = [],\n    // (left, top)\n_silent = false,\n    savedInputChecked = [];\n/** @const */\n\nvar documentExists = typeof document !== 'undefined',\n    PositionGhostAbsolutely = IOS,\n    CSSFloatProperty = Edge || IE11OrLess ? 'cssFloat' : 'float',\n    // This will not pass for IE9, because IE9 DnD only works on anchors\nsupportDraggable = documentExists && !ChromeForAndroid && !IOS && 'draggable' in document.createElement('div'),\n    supportCssPointerEvents = function () {\n  if (!documentExists) return; // false when <= IE11\n\n  if (IE11OrLess) {\n    return false;\n  }\n\n  var el = document.createElement('x');\n  el.style.cssText = 'pointer-events:auto';\n  return el.style.pointerEvents === 'auto';\n}(),\n    _detectDirection = function _detectDirection(el, options) {\n  var elCSS = css(el),\n      elWidth = parseInt(elCSS.width) - parseInt(elCSS.paddingLeft) - parseInt(elCSS.paddingRight) - parseInt(elCSS.borderLeftWidth) - parseInt(elCSS.borderRightWidth),\n      child1 = getChild(el, 0, options),\n      child2 = getChild(el, 1, options),\n      firstChildCSS = child1 && css(child1),\n      secondChildCSS = child2 && css(child2),\n      firstChildWidth = firstChildCSS && parseInt(firstChildCSS.marginLeft) + parseInt(firstChildCSS.marginRight) + getRect(child1).width,\n      secondChildWidth = secondChildCSS && parseInt(secondChildCSS.marginLeft) + parseInt(secondChildCSS.marginRight) + getRect(child2).width;\n\n  if (elCSS.display === 'flex') {\n    return elCSS.flexDirection === 'column' || elCSS.flexDirection === 'column-reverse' ? 'vertical' : 'horizontal';\n  }\n\n  if (elCSS.display === 'grid') {\n    return elCSS.gridTemplateColumns.split(' ').length <= 1 ? 'vertical' : 'horizontal';\n  }\n\n  if (child1 && firstChildCSS[\"float\"] && firstChildCSS[\"float\"] !== 'none') {\n    var touchingSideChild2 = firstChildCSS[\"float\"] === 'left' ? 'left' : 'right';\n    return child2 && (secondChildCSS.clear === 'both' || secondChildCSS.clear === touchingSideChild2) ? 'vertical' : 'horizontal';\n  }\n\n  return child1 && (firstChildCSS.display === 'block' || firstChildCSS.display === 'flex' || firstChildCSS.display === 'table' || firstChildCSS.display === 'grid' || firstChildWidth >= elWidth && elCSS[CSSFloatProperty] === 'none' || child2 && elCSS[CSSFloatProperty] === 'none' && firstChildWidth + secondChildWidth > elWidth) ? 'vertical' : 'horizontal';\n},\n    _dragElInRowColumn = function _dragElInRowColumn(dragRect, targetRect, vertical) {\n  var dragElS1Opp = vertical ? dragRect.left : dragRect.top,\n      dragElS2Opp = vertical ? dragRect.right : dragRect.bottom,\n      dragElOppLength = vertical ? dragRect.width : dragRect.height,\n      targetS1Opp = vertical ? targetRect.left : targetRect.top,\n      targetS2Opp = vertical ? targetRect.right : targetRect.bottom,\n      targetOppLength = vertical ? targetRect.width : targetRect.height;\n  return dragElS1Opp === targetS1Opp || dragElS2Opp === targetS2Opp || dragElS1Opp + dragElOppLength / 2 === targetS1Opp + targetOppLength / 2;\n},\n\n/**\n * Detects first nearest empty sortable to X and Y position using emptyInsertThreshold.\n * @param  {Number} x      X position\n * @param  {Number} y      Y position\n * @return {HTMLElement}   Element of the first found nearest Sortable\n */\n_detectNearestEmptySortable = function _detectNearestEmptySortable(x, y) {\n  var ret;\n  sortables.some(function (sortable) {\n    if (lastChild(sortable)) return;\n    var rect = getRect(sortable),\n        threshold = sortable[expando].options.emptyInsertThreshold,\n        insideHorizontally = x >= rect.left - threshold && x <= rect.right + threshold,\n        insideVertically = y >= rect.top - threshold && y <= rect.bottom + threshold;\n\n    if (threshold && insideHorizontally && insideVertically) {\n      return ret = sortable;\n    }\n  });\n  return ret;\n},\n    _prepareGroup = function _prepareGroup(options) {\n  function toFn(value, pull) {\n    return function (to, from, dragEl, evt) {\n      var sameGroup = to.options.group.name && from.options.group.name && to.options.group.name === from.options.group.name;\n\n      if (value == null && (pull || sameGroup)) {\n        // Default pull value\n        // Default pull and put value if same group\n        return true;\n      } else if (value == null || value === false) {\n        return false;\n      } else if (pull && value === 'clone') {\n        return value;\n      } else if (typeof value === 'function') {\n        return toFn(value(to, from, dragEl, evt), pull)(to, from, dragEl, evt);\n      } else {\n        var otherGroup = (pull ? to : from).options.group.name;\n        return value === true || typeof value === 'string' && value === otherGroup || value.join && value.indexOf(otherGroup) > -1;\n      }\n    };\n  }\n\n  var group = {};\n  var originalGroup = options.group;\n\n  if (!originalGroup || _typeof(originalGroup) != 'object') {\n    originalGroup = {\n      name: originalGroup\n    };\n  }\n\n  group.name = originalGroup.name;\n  group.checkPull = toFn(originalGroup.pull, true);\n  group.checkPut = toFn(originalGroup.put);\n  group.revertClone = originalGroup.revertClone;\n  options.group = group;\n},\n    _hideGhostForTarget = function _hideGhostForTarget() {\n  if (!supportCssPointerEvents && ghostEl) {\n    css(ghostEl, 'display', 'none');\n  }\n},\n    _unhideGhostForTarget = function _unhideGhostForTarget() {\n  if (!supportCssPointerEvents && ghostEl) {\n    css(ghostEl, 'display', '');\n  }\n}; // #1184 fix - Prevent click event on fallback if dragged but item not changed position\n\n\nif (documentExists) {\n  document.addEventListener('click', function (evt) {\n    if (ignoreNextClick) {\n      evt.preventDefault();\n      evt.stopPropagation && evt.stopPropagation();\n      evt.stopImmediatePropagation && evt.stopImmediatePropagation();\n      ignoreNextClick = false;\n      return false;\n    }\n  }, true);\n}\n\nvar nearestEmptyInsertDetectEvent = function nearestEmptyInsertDetectEvent(evt) {\n  if (dragEl) {\n    evt = evt.touches ? evt.touches[0] : evt;\n\n    var nearest = _detectNearestEmptySortable(evt.clientX, evt.clientY);\n\n    if (nearest) {\n      // Create imitation event\n      var event = {};\n\n      for (var i in evt) {\n        if (evt.hasOwnProperty(i)) {\n          event[i] = evt[i];\n        }\n      }\n\n      event.target = event.rootEl = nearest;\n      event.preventDefault = void 0;\n      event.stopPropagation = void 0;\n\n      nearest[expando]._onDragOver(event);\n    }\n  }\n};\n\nvar _checkOutsideTargetEl = function _checkOutsideTargetEl(evt) {\n  if (dragEl) {\n    dragEl.parentNode[expando]._isOutsideThisEl(evt.target);\n  }\n};\n/**\n * @class  Sortable\n * @param  {HTMLElement}  el\n * @param  {Object}       [options]\n */\n\n\nfunction Sortable(el, options) {\n  if (!(el && el.nodeType && el.nodeType === 1)) {\n    throw \"Sortable: `el` must be an HTMLElement, not \".concat({}.toString.call(el));\n  }\n\n  this.el = el; // root element\n\n  this.options = options = _extends({}, options); // Export instance\n\n  el[expando] = this;\n  var defaults = {\n    group: null,\n    sort: true,\n    disabled: false,\n    store: null,\n    handle: null,\n    draggable: /^[uo]l$/i.test(el.nodeName) ? '>li' : '>*',\n    swapThreshold: 1,\n    // percentage; 0 <= x <= 1\n    invertSwap: false,\n    // invert always\n    invertedSwapThreshold: null,\n    // will be set to same as swapThreshold if default\n    removeCloneOnHide: true,\n    direction: function direction() {\n      return _detectDirection(el, this.options);\n    },\n    ghostClass: 'sortable-ghost',\n    chosenClass: 'sortable-chosen',\n    dragClass: 'sortable-drag',\n    ignore: 'a, img',\n    filter: null,\n    preventOnFilter: true,\n    animation: 0,\n    easing: null,\n    setData: function setData(dataTransfer, dragEl) {\n      dataTransfer.setData('Text', dragEl.textContent);\n    },\n    dropBubble: false,\n    dragoverBubble: false,\n    dataIdAttr: 'data-id',\n    delay: 0,\n    delayOnTouchOnly: false,\n    touchStartThreshold: (Number.parseInt ? Number : window).parseInt(window.devicePixelRatio, 10) || 1,\n    forceFallback: false,\n    fallbackClass: 'sortable-fallback',\n    fallbackOnBody: false,\n    fallbackTolerance: 0,\n    fallbackOffset: {\n      x: 0,\n      y: 0\n    },\n    supportPointer: Sortable.supportPointer !== false && 'PointerEvent' in window,\n    emptyInsertThreshold: 5\n  };\n  PluginManager.initializePlugins(this, el, defaults); // Set default options\n\n  for (var name in defaults) {\n    !(name in options) && (options[name] = defaults[name]);\n  }\n\n  _prepareGroup(options); // Bind all private methods\n\n\n  for (var fn in this) {\n    if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n      this[fn] = this[fn].bind(this);\n    }\n  } // Setup drag mode\n\n\n  this.nativeDraggable = options.forceFallback ? false : supportDraggable;\n\n  if (this.nativeDraggable) {\n    // Touch start threshold cannot be greater than the native dragstart threshold\n    this.options.touchStartThreshold = 1;\n  } // Bind events\n\n\n  if (options.supportPointer) {\n    on(el, 'pointerdown', this._onTapStart);\n  } else {\n    on(el, 'mousedown', this._onTapStart);\n    on(el, 'touchstart', this._onTapStart);\n  }\n\n  if (this.nativeDraggable) {\n    on(el, 'dragover', this);\n    on(el, 'dragenter', this);\n  }\n\n  sortables.push(this.el); // Restore sorting\n\n  options.store && options.store.get && this.sort(options.store.get(this) || []); // Add animation state manager\n\n  _extends(this, AnimationStateManager());\n}\n\nSortable.prototype =\n/** @lends Sortable.prototype */\n{\n  constructor: Sortable,\n  _isOutsideThisEl: function _isOutsideThisEl(target) {\n    if (!this.el.contains(target) && target !== this.el) {\n      lastTarget = null;\n    }\n  },\n  _getDirection: function _getDirection(evt, target) {\n    return typeof this.options.direction === 'function' ? this.options.direction.call(this, evt, target, dragEl) : this.options.direction;\n  },\n  _onTapStart: function _onTapStart(\n  /** Event|TouchEvent */\n  evt) {\n    if (!evt.cancelable) return;\n\n    var _this = this,\n        el = this.el,\n        options = this.options,\n        preventOnFilter = options.preventOnFilter,\n        type = evt.type,\n        touch = evt.touches && evt.touches[0] || evt.pointerType && evt.pointerType === 'touch' && evt,\n        target = (touch || evt).target,\n        originalTarget = evt.target.shadowRoot && (evt.path && evt.path[0] || evt.composedPath && evt.composedPath()[0]) || target,\n        filter = options.filter;\n\n    _saveInputCheckedState(el); // Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.\n\n\n    if (dragEl) {\n      return;\n    }\n\n    if (/mousedown|pointerdown/.test(type) && evt.button !== 0 || options.disabled) {\n      return; // only left button and enabled\n    } // cancel dnd if original target is content editable\n\n\n    if (originalTarget.isContentEditable) {\n      return;\n    }\n\n    target = closest(target, options.draggable, el, false);\n\n    if (target && target.animated) {\n      return;\n    }\n\n    if (lastDownEl === target) {\n      // Ignoring duplicate `down`\n      return;\n    } // Get the index of the dragged element within its parent\n\n\n    oldIndex = index(target);\n    oldDraggableIndex = index(target, options.draggable); // Check filter\n\n    if (typeof filter === 'function') {\n      if (filter.call(this, evt, target, this)) {\n        _dispatchEvent({\n          sortable: _this,\n          rootEl: originalTarget,\n          name: 'filter',\n          targetEl: target,\n          toEl: el,\n          fromEl: el\n        });\n\n        pluginEvent('filter', _this, {\n          evt: evt\n        });\n        preventOnFilter && evt.cancelable && evt.preventDefault();\n        return; // cancel dnd\n      }\n    } else if (filter) {\n      filter = filter.split(',').some(function (criteria) {\n        criteria = closest(originalTarget, criteria.trim(), el, false);\n\n        if (criteria) {\n          _dispatchEvent({\n            sortable: _this,\n            rootEl: criteria,\n            name: 'filter',\n            targetEl: target,\n            fromEl: el,\n            toEl: el\n          });\n\n          pluginEvent('filter', _this, {\n            evt: evt\n          });\n          return true;\n        }\n      });\n\n      if (filter) {\n        preventOnFilter && evt.cancelable && evt.preventDefault();\n        return; // cancel dnd\n      }\n    }\n\n    if (options.handle && !closest(originalTarget, options.handle, el, false)) {\n      return;\n    } // Prepare `dragstart`\n\n\n    this._prepareDragStart(evt, touch, target);\n  },\n  _prepareDragStart: function _prepareDragStart(\n  /** Event */\n  evt,\n  /** Touch */\n  touch,\n  /** HTMLElement */\n  target) {\n    var _this = this,\n        el = _this.el,\n        options = _this.options,\n        ownerDocument = el.ownerDocument,\n        dragStartFn;\n\n    if (target && !dragEl && target.parentNode === el) {\n      var dragRect = getRect(target);\n      rootEl = el;\n      dragEl = target;\n      parentEl = dragEl.parentNode;\n      nextEl = dragEl.nextSibling;\n      lastDownEl = target;\n      activeGroup = options.group;\n      Sortable.dragged = dragEl;\n      tapEvt = {\n        target: dragEl,\n        clientX: (touch || evt).clientX,\n        clientY: (touch || evt).clientY\n      };\n      tapDistanceLeft = tapEvt.clientX - dragRect.left;\n      tapDistanceTop = tapEvt.clientY - dragRect.top;\n      this._lastX = (touch || evt).clientX;\n      this._lastY = (touch || evt).clientY;\n      dragEl.style['will-change'] = 'all';\n\n      dragStartFn = function dragStartFn() {\n        pluginEvent('delayEnded', _this, {\n          evt: evt\n        });\n\n        if (Sortable.eventCanceled) {\n          _this._onDrop();\n\n          return;\n        } // Delayed drag has been triggered\n        // we can re-enable the events: touchmove/mousemove\n\n\n        _this._disableDelayedDragEvents();\n\n        if (!FireFox && _this.nativeDraggable) {\n          dragEl.draggable = true;\n        } // Bind the events: dragstart/dragend\n\n\n        _this._triggerDragStart(evt, touch); // Drag start event\n\n\n        _dispatchEvent({\n          sortable: _this,\n          name: 'choose',\n          originalEvent: evt\n        }); // Chosen item\n\n\n        toggleClass(dragEl, options.chosenClass, true);\n      }; // Disable \"draggable\"\n\n\n      options.ignore.split(',').forEach(function (criteria) {\n        find(dragEl, criteria.trim(), _disableDraggable);\n      });\n      on(ownerDocument, 'dragover', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'mousemove', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'touchmove', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'mouseup', _this._onDrop);\n      on(ownerDocument, 'touchend', _this._onDrop);\n      on(ownerDocument, 'touchcancel', _this._onDrop); // Make dragEl draggable (must be before delay for FireFox)\n\n      if (FireFox && this.nativeDraggable) {\n        this.options.touchStartThreshold = 4;\n        dragEl.draggable = true;\n      }\n\n      pluginEvent('delayStart', this, {\n        evt: evt\n      }); // Delay is impossible for native DnD in Edge or IE\n\n      if (options.delay && (!options.delayOnTouchOnly || touch) && (!this.nativeDraggable || !(Edge || IE11OrLess))) {\n        if (Sortable.eventCanceled) {\n          this._onDrop();\n\n          return;\n        } // If the user moves the pointer or let go the click or touch\n        // before the delay has been reached:\n        // disable the delayed drag\n\n\n        on(ownerDocument, 'mouseup', _this._disableDelayedDrag);\n        on(ownerDocument, 'touchend', _this._disableDelayedDrag);\n        on(ownerDocument, 'touchcancel', _this._disableDelayedDrag);\n        on(ownerDocument, 'mousemove', _this._delayedDragTouchMoveHandler);\n        on(ownerDocument, 'touchmove', _this._delayedDragTouchMoveHandler);\n        options.supportPointer && on(ownerDocument, 'pointermove', _this._delayedDragTouchMoveHandler);\n        _this._dragStartTimer = setTimeout(dragStartFn, options.delay);\n      } else {\n        dragStartFn();\n      }\n    }\n  },\n  _delayedDragTouchMoveHandler: function _delayedDragTouchMoveHandler(\n  /** TouchEvent|PointerEvent **/\n  e) {\n    var touch = e.touches ? e.touches[0] : e;\n\n    if (Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) >= Math.floor(this.options.touchStartThreshold / (this.nativeDraggable && window.devicePixelRatio || 1))) {\n      this._disableDelayedDrag();\n    }\n  },\n  _disableDelayedDrag: function _disableDelayedDrag() {\n    dragEl && _disableDraggable(dragEl);\n    clearTimeout(this._dragStartTimer);\n\n    this._disableDelayedDragEvents();\n  },\n  _disableDelayedDragEvents: function _disableDelayedDragEvents() {\n    var ownerDocument = this.el.ownerDocument;\n    off(ownerDocument, 'mouseup', this._disableDelayedDrag);\n    off(ownerDocument, 'touchend', this._disableDelayedDrag);\n    off(ownerDocument, 'touchcancel', this._disableDelayedDrag);\n    off(ownerDocument, 'mousemove', this._delayedDragTouchMoveHandler);\n    off(ownerDocument, 'touchmove', this._delayedDragTouchMoveHandler);\n    off(ownerDocument, 'pointermove', this._delayedDragTouchMoveHandler);\n  },\n  _triggerDragStart: function _triggerDragStart(\n  /** Event */\n  evt,\n  /** Touch */\n  touch) {\n    touch = touch || evt.pointerType == 'touch' && evt;\n\n    if (!this.nativeDraggable || touch) {\n      if (this.options.supportPointer) {\n        on(document, 'pointermove', this._onTouchMove);\n      } else if (touch) {\n        on(document, 'touchmove', this._onTouchMove);\n      } else {\n        on(document, 'mousemove', this._onTouchMove);\n      }\n    } else {\n      on(dragEl, 'dragend', this);\n      on(rootEl, 'dragstart', this._onDragStart);\n    }\n\n    try {\n      if (document.selection) {\n        // Timeout neccessary for IE9\n        _nextTick(function () {\n          document.selection.empty();\n        });\n      } else {\n        window.getSelection().removeAllRanges();\n      }\n    } catch (err) {}\n  },\n  _dragStarted: function _dragStarted(fallback, evt) {\n\n    awaitingDragStarted = false;\n\n    if (rootEl && dragEl) {\n      pluginEvent('dragStarted', this, {\n        evt: evt\n      });\n\n      if (this.nativeDraggable) {\n        on(document, 'dragover', _checkOutsideTargetEl);\n      }\n\n      var options = this.options; // Apply effect\n\n      !fallback && toggleClass(dragEl, options.dragClass, false);\n      toggleClass(dragEl, options.ghostClass, true);\n      Sortable.active = this;\n      fallback && this._appendGhost(); // Drag start event\n\n      _dispatchEvent({\n        sortable: this,\n        name: 'start',\n        originalEvent: evt\n      });\n    } else {\n      this._nulling();\n    }\n  },\n  _emulateDragOver: function _emulateDragOver() {\n    if (touchEvt) {\n      this._lastX = touchEvt.clientX;\n      this._lastY = touchEvt.clientY;\n\n      _hideGhostForTarget();\n\n      var target = document.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n      var parent = target;\n\n      while (target && target.shadowRoot) {\n        target = target.shadowRoot.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n        if (target === parent) break;\n        parent = target;\n      }\n\n      dragEl.parentNode[expando]._isOutsideThisEl(target);\n\n      if (parent) {\n        do {\n          if (parent[expando]) {\n            var inserted = void 0;\n            inserted = parent[expando]._onDragOver({\n              clientX: touchEvt.clientX,\n              clientY: touchEvt.clientY,\n              target: target,\n              rootEl: parent\n            });\n\n            if (inserted && !this.options.dragoverBubble) {\n              break;\n            }\n          }\n\n          target = parent; // store last element\n        }\n        /* jshint boss:true */\n        while (parent = parent.parentNode);\n      }\n\n      _unhideGhostForTarget();\n    }\n  },\n  _onTouchMove: function _onTouchMove(\n  /**TouchEvent*/\n  evt) {\n    if (tapEvt) {\n      var options = this.options,\n          fallbackTolerance = options.fallbackTolerance,\n          fallbackOffset = options.fallbackOffset,\n          touch = evt.touches ? evt.touches[0] : evt,\n          ghostMatrix = ghostEl && matrix(ghostEl, true),\n          scaleX = ghostEl && ghostMatrix && ghostMatrix.a,\n          scaleY = ghostEl && ghostMatrix && ghostMatrix.d,\n          relativeScrollOffset = PositionGhostAbsolutely && ghostRelativeParent && getRelativeScrollOffset(ghostRelativeParent),\n          dx = (touch.clientX - tapEvt.clientX + fallbackOffset.x) / (scaleX || 1) + (relativeScrollOffset ? relativeScrollOffset[0] - ghostRelativeParentInitialScroll[0] : 0) / (scaleX || 1),\n          dy = (touch.clientY - tapEvt.clientY + fallbackOffset.y) / (scaleY || 1) + (relativeScrollOffset ? relativeScrollOffset[1] - ghostRelativeParentInitialScroll[1] : 0) / (scaleY || 1); // only set the status to dragging, when we are actually dragging\n\n      if (!Sortable.active && !awaitingDragStarted) {\n        if (fallbackTolerance && Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) < fallbackTolerance) {\n          return;\n        }\n\n        this._onDragStart(evt, true);\n      }\n\n      if (ghostEl) {\n        if (ghostMatrix) {\n          ghostMatrix.e += dx - (lastDx || 0);\n          ghostMatrix.f += dy - (lastDy || 0);\n        } else {\n          ghostMatrix = {\n            a: 1,\n            b: 0,\n            c: 0,\n            d: 1,\n            e: dx,\n            f: dy\n          };\n        }\n\n        var cssMatrix = \"matrix(\".concat(ghostMatrix.a, \",\").concat(ghostMatrix.b, \",\").concat(ghostMatrix.c, \",\").concat(ghostMatrix.d, \",\").concat(ghostMatrix.e, \",\").concat(ghostMatrix.f, \")\");\n        css(ghostEl, 'webkitTransform', cssMatrix);\n        css(ghostEl, 'mozTransform', cssMatrix);\n        css(ghostEl, 'msTransform', cssMatrix);\n        css(ghostEl, 'transform', cssMatrix);\n        lastDx = dx;\n        lastDy = dy;\n        touchEvt = touch;\n      }\n\n      evt.cancelable && evt.preventDefault();\n    }\n  },\n  _appendGhost: function _appendGhost() {\n    // Bug if using scale(): https://stackoverflow.com/questions/2637058\n    // Not being adjusted for\n    if (!ghostEl) {\n      var container = this.options.fallbackOnBody ? document.body : rootEl,\n          rect = getRect(dragEl, true, PositionGhostAbsolutely, true, container),\n          options = this.options; // Position absolutely\n\n      if (PositionGhostAbsolutely) {\n        // Get relatively positioned parent\n        ghostRelativeParent = container;\n\n        while (css(ghostRelativeParent, 'position') === 'static' && css(ghostRelativeParent, 'transform') === 'none' && ghostRelativeParent !== document) {\n          ghostRelativeParent = ghostRelativeParent.parentNode;\n        }\n\n        if (ghostRelativeParent !== document.body && ghostRelativeParent !== document.documentElement) {\n          if (ghostRelativeParent === document) ghostRelativeParent = getWindowScrollingElement();\n          rect.top += ghostRelativeParent.scrollTop;\n          rect.left += ghostRelativeParent.scrollLeft;\n        } else {\n          ghostRelativeParent = getWindowScrollingElement();\n        }\n\n        ghostRelativeParentInitialScroll = getRelativeScrollOffset(ghostRelativeParent);\n      }\n\n      ghostEl = dragEl.cloneNode(true);\n      toggleClass(ghostEl, options.ghostClass, false);\n      toggleClass(ghostEl, options.fallbackClass, true);\n      toggleClass(ghostEl, options.dragClass, true);\n      css(ghostEl, 'transition', '');\n      css(ghostEl, 'transform', '');\n      css(ghostEl, 'box-sizing', 'border-box');\n      css(ghostEl, 'margin', 0);\n      css(ghostEl, 'top', rect.top);\n      css(ghostEl, 'left', rect.left);\n      css(ghostEl, 'width', rect.width);\n      css(ghostEl, 'height', rect.height);\n      css(ghostEl, 'opacity', '0.8');\n      css(ghostEl, 'position', PositionGhostAbsolutely ? 'absolute' : 'fixed');\n      css(ghostEl, 'zIndex', '100000');\n      css(ghostEl, 'pointerEvents', 'none');\n      Sortable.ghost = ghostEl;\n      container.appendChild(ghostEl); // Set transform-origin\n\n      css(ghostEl, 'transform-origin', tapDistanceLeft / parseInt(ghostEl.style.width) * 100 + '% ' + tapDistanceTop / parseInt(ghostEl.style.height) * 100 + '%');\n    }\n  },\n  _onDragStart: function _onDragStart(\n  /**Event*/\n  evt,\n  /**boolean*/\n  fallback) {\n    var _this = this;\n\n    var dataTransfer = evt.dataTransfer;\n    var options = _this.options;\n    pluginEvent('dragStart', this, {\n      evt: evt\n    });\n\n    if (Sortable.eventCanceled) {\n      this._onDrop();\n\n      return;\n    }\n\n    pluginEvent('setupClone', this);\n\n    if (!Sortable.eventCanceled) {\n      cloneEl = clone(dragEl);\n      cloneEl.draggable = false;\n      cloneEl.style['will-change'] = '';\n\n      this._hideClone();\n\n      toggleClass(cloneEl, this.options.chosenClass, false);\n      Sortable.clone = cloneEl;\n    } // #1143: IFrame support workaround\n\n\n    _this.cloneId = _nextTick(function () {\n      pluginEvent('clone', _this);\n      if (Sortable.eventCanceled) return;\n\n      if (!_this.options.removeCloneOnHide) {\n        rootEl.insertBefore(cloneEl, dragEl);\n      }\n\n      _this._hideClone();\n\n      _dispatchEvent({\n        sortable: _this,\n        name: 'clone'\n      });\n    });\n    !fallback && toggleClass(dragEl, options.dragClass, true); // Set proper drop events\n\n    if (fallback) {\n      ignoreNextClick = true;\n      _this._loopId = setInterval(_this._emulateDragOver, 50);\n    } else {\n      // Undo what was set in _prepareDragStart before drag started\n      off(document, 'mouseup', _this._onDrop);\n      off(document, 'touchend', _this._onDrop);\n      off(document, 'touchcancel', _this._onDrop);\n\n      if (dataTransfer) {\n        dataTransfer.effectAllowed = 'move';\n        options.setData && options.setData.call(_this, dataTransfer, dragEl);\n      }\n\n      on(document, 'drop', _this); // #1276 fix:\n\n      css(dragEl, 'transform', 'translateZ(0)');\n    }\n\n    awaitingDragStarted = true;\n    _this._dragStartId = _nextTick(_this._dragStarted.bind(_this, fallback, evt));\n    on(document, 'selectstart', _this);\n    moved = true;\n\n    if (Safari) {\n      css(document.body, 'user-select', 'none');\n    }\n  },\n  // Returns true - if no further action is needed (either inserted or another condition)\n  _onDragOver: function _onDragOver(\n  /**Event*/\n  evt) {\n    var el = this.el,\n        target = evt.target,\n        dragRect,\n        targetRect,\n        revert,\n        options = this.options,\n        group = options.group,\n        activeSortable = Sortable.active,\n        isOwner = activeGroup === group,\n        canSort = options.sort,\n        fromSortable = putSortable || activeSortable,\n        vertical,\n        _this = this,\n        completedFired = false;\n\n    if (_silent) return;\n\n    function dragOverEvent(name, extra) {\n      pluginEvent(name, _this, _objectSpread({\n        evt: evt,\n        isOwner: isOwner,\n        axis: vertical ? 'vertical' : 'horizontal',\n        revert: revert,\n        dragRect: dragRect,\n        targetRect: targetRect,\n        canSort: canSort,\n        fromSortable: fromSortable,\n        target: target,\n        completed: completed,\n        onMove: function onMove(target, after) {\n          return _onMove(rootEl, el, dragEl, dragRect, target, getRect(target), evt, after);\n        },\n        changed: changed\n      }, extra));\n    } // Capture animation state\n\n\n    function capture() {\n      dragOverEvent('dragOverAnimationCapture');\n\n      _this.captureAnimationState();\n\n      if (_this !== fromSortable) {\n        fromSortable.captureAnimationState();\n      }\n    } // Return invocation when dragEl is inserted (or completed)\n\n\n    function completed(insertion) {\n      dragOverEvent('dragOverCompleted', {\n        insertion: insertion\n      });\n\n      if (insertion) {\n        // Clones must be hidden before folding animation to capture dragRectAbsolute properly\n        if (isOwner) {\n          activeSortable._hideClone();\n        } else {\n          activeSortable._showClone(_this);\n        }\n\n        if (_this !== fromSortable) {\n          // Set ghost class to new sortable's ghost class\n          toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : activeSortable.options.ghostClass, false);\n          toggleClass(dragEl, options.ghostClass, true);\n        }\n\n        if (putSortable !== _this && _this !== Sortable.active) {\n          putSortable = _this;\n        } else if (_this === Sortable.active && putSortable) {\n          putSortable = null;\n        } // Animation\n\n\n        if (fromSortable === _this) {\n          _this._ignoreWhileAnimating = target;\n        }\n\n        _this.animateAll(function () {\n          dragOverEvent('dragOverAnimationComplete');\n          _this._ignoreWhileAnimating = null;\n        });\n\n        if (_this !== fromSortable) {\n          fromSortable.animateAll();\n          fromSortable._ignoreWhileAnimating = null;\n        }\n      } // Null lastTarget if it is not inside a previously swapped element\n\n\n      if (target === dragEl && !dragEl.animated || target === el && !target.animated) {\n        lastTarget = null;\n      } // no bubbling and not fallback\n\n\n      if (!options.dragoverBubble && !evt.rootEl && target !== document) {\n        dragEl.parentNode[expando]._isOutsideThisEl(evt.target); // Do not detect for empty insert if already inserted\n\n\n        !insertion && nearestEmptyInsertDetectEvent(evt);\n      }\n\n      !options.dragoverBubble && evt.stopPropagation && evt.stopPropagation();\n      return completedFired = true;\n    } // Call when dragEl has been inserted\n\n\n    function changed() {\n      newIndex = index(dragEl);\n      newDraggableIndex = index(dragEl, options.draggable);\n\n      _dispatchEvent({\n        sortable: _this,\n        name: 'change',\n        toEl: el,\n        newIndex: newIndex,\n        newDraggableIndex: newDraggableIndex,\n        originalEvent: evt\n      });\n    }\n\n    if (evt.preventDefault !== void 0) {\n      evt.cancelable && evt.preventDefault();\n    }\n\n    target = closest(target, options.draggable, el, true);\n    dragOverEvent('dragOver');\n    if (Sortable.eventCanceled) return completedFired;\n\n    if (dragEl.contains(evt.target) || target.animated && target.animatingX && target.animatingY || _this._ignoreWhileAnimating === target) {\n      return completed(false);\n    }\n\n    ignoreNextClick = false;\n\n    if (activeSortable && !options.disabled && (isOwner ? canSort || (revert = !rootEl.contains(dragEl)) // Reverting item into the original list\n    : putSortable === this || (this.lastPutMode = activeGroup.checkPull(this, activeSortable, dragEl, evt)) && group.checkPut(this, activeSortable, dragEl, evt))) {\n      vertical = this._getDirection(evt, target) === 'vertical';\n      dragRect = getRect(dragEl);\n      dragOverEvent('dragOverValid');\n      if (Sortable.eventCanceled) return completedFired;\n\n      if (revert) {\n        parentEl = rootEl; // actualization\n\n        capture();\n\n        this._hideClone();\n\n        dragOverEvent('revert');\n\n        if (!Sortable.eventCanceled) {\n          if (nextEl) {\n            rootEl.insertBefore(dragEl, nextEl);\n          } else {\n            rootEl.appendChild(dragEl);\n          }\n        }\n\n        return completed(true);\n      }\n\n      var elLastChild = lastChild(el, options.draggable);\n\n      if (!elLastChild || _ghostIsLast(evt, vertical, this) && !elLastChild.animated) {\n        // If already at end of list: Do not insert\n        if (elLastChild === dragEl) {\n          return completed(false);\n        } // assign target only if condition is true\n\n\n        if (elLastChild && el === evt.target) {\n          target = elLastChild;\n        }\n\n        if (target) {\n          targetRect = getRect(target);\n        }\n\n        if (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, !!target) !== false) {\n          capture();\n          el.appendChild(dragEl);\n          parentEl = el; // actualization\n\n          changed();\n          return completed(true);\n        }\n      } else if (target.parentNode === el) {\n        targetRect = getRect(target);\n        var direction = 0,\n            targetBeforeFirstSwap,\n            differentLevel = dragEl.parentNode !== el,\n            differentRowCol = !_dragElInRowColumn(dragEl.animated && dragEl.toRect || dragRect, target.animated && target.toRect || targetRect, vertical),\n            side1 = vertical ? 'top' : 'left',\n            scrolledPastTop = isScrolledPast(target, 'top', 'top') || isScrolledPast(dragEl, 'top', 'top'),\n            scrollBefore = scrolledPastTop ? scrolledPastTop.scrollTop : void 0;\n\n        if (lastTarget !== target) {\n          targetBeforeFirstSwap = targetRect[side1];\n          pastFirstInvertThresh = false;\n          isCircumstantialInvert = !differentRowCol && options.invertSwap || differentLevel;\n        }\n\n        direction = _getSwapDirection(evt, target, targetRect, vertical, differentRowCol ? 1 : options.swapThreshold, options.invertedSwapThreshold == null ? options.swapThreshold : options.invertedSwapThreshold, isCircumstantialInvert, lastTarget === target);\n        var sibling;\n\n        if (direction !== 0) {\n          // Check if target is beside dragEl in respective direction (ignoring hidden elements)\n          var dragIndex = index(dragEl);\n\n          do {\n            dragIndex -= direction;\n            sibling = parentEl.children[dragIndex];\n          } while (sibling && (css(sibling, 'display') === 'none' || sibling === ghostEl));\n        } // If dragEl is already beside target: Do not insert\n\n\n        if (direction === 0 || sibling === target) {\n          return completed(false);\n        }\n\n        lastTarget = target;\n        lastDirection = direction;\n        var nextSibling = target.nextElementSibling,\n            after = false;\n        after = direction === 1;\n\n        var moveVector = _onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, after);\n\n        if (moveVector !== false) {\n          if (moveVector === 1 || moveVector === -1) {\n            after = moveVector === 1;\n          }\n\n          _silent = true;\n          setTimeout(_unsilent, 30);\n          capture();\n\n          if (after && !nextSibling) {\n            el.appendChild(dragEl);\n          } else {\n            target.parentNode.insertBefore(dragEl, after ? nextSibling : target);\n          } // Undo chrome's scroll adjustment (has no effect on other browsers)\n\n\n          if (scrolledPastTop) {\n            scrollBy(scrolledPastTop, 0, scrollBefore - scrolledPastTop.scrollTop);\n          }\n\n          parentEl = dragEl.parentNode; // actualization\n          // must be done before animation\n\n          if (targetBeforeFirstSwap !== undefined && !isCircumstantialInvert) {\n            targetMoveDistance = Math.abs(targetBeforeFirstSwap - getRect(target)[side1]);\n          }\n\n          changed();\n          return completed(true);\n        }\n      }\n\n      if (el.contains(dragEl)) {\n        return completed(false);\n      }\n    }\n\n    return false;\n  },\n  _ignoreWhileAnimating: null,\n  _offMoveEvents: function _offMoveEvents() {\n    off(document, 'mousemove', this._onTouchMove);\n    off(document, 'touchmove', this._onTouchMove);\n    off(document, 'pointermove', this._onTouchMove);\n    off(document, 'dragover', nearestEmptyInsertDetectEvent);\n    off(document, 'mousemove', nearestEmptyInsertDetectEvent);\n    off(document, 'touchmove', nearestEmptyInsertDetectEvent);\n  },\n  _offUpEvents: function _offUpEvents() {\n    var ownerDocument = this.el.ownerDocument;\n    off(ownerDocument, 'mouseup', this._onDrop);\n    off(ownerDocument, 'touchend', this._onDrop);\n    off(ownerDocument, 'pointerup', this._onDrop);\n    off(ownerDocument, 'touchcancel', this._onDrop);\n    off(document, 'selectstart', this);\n  },\n  _onDrop: function _onDrop(\n  /**Event*/\n  evt) {\n    var el = this.el,\n        options = this.options; // Get the index of the dragged element within its parent\n\n    newIndex = index(dragEl);\n    newDraggableIndex = index(dragEl, options.draggable);\n    pluginEvent('drop', this, {\n      evt: evt\n    });\n    parentEl = dragEl && dragEl.parentNode; // Get again after plugin event\n\n    newIndex = index(dragEl);\n    newDraggableIndex = index(dragEl, options.draggable);\n\n    if (Sortable.eventCanceled) {\n      this._nulling();\n\n      return;\n    }\n\n    awaitingDragStarted = false;\n    isCircumstantialInvert = false;\n    pastFirstInvertThresh = false;\n    clearInterval(this._loopId);\n    clearTimeout(this._dragStartTimer);\n\n    _cancelNextTick(this.cloneId);\n\n    _cancelNextTick(this._dragStartId); // Unbind events\n\n\n    if (this.nativeDraggable) {\n      off(document, 'drop', this);\n      off(el, 'dragstart', this._onDragStart);\n    }\n\n    this._offMoveEvents();\n\n    this._offUpEvents();\n\n    if (Safari) {\n      css(document.body, 'user-select', '');\n    }\n\n    css(dragEl, 'transform', '');\n\n    if (evt) {\n      if (moved) {\n        evt.cancelable && evt.preventDefault();\n        !options.dropBubble && evt.stopPropagation();\n      }\n\n      ghostEl && ghostEl.parentNode && ghostEl.parentNode.removeChild(ghostEl);\n\n      if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== 'clone') {\n        // Remove clone(s)\n        cloneEl && cloneEl.parentNode && cloneEl.parentNode.removeChild(cloneEl);\n      }\n\n      if (dragEl) {\n        if (this.nativeDraggable) {\n          off(dragEl, 'dragend', this);\n        }\n\n        _disableDraggable(dragEl);\n\n        dragEl.style['will-change'] = ''; // Remove classes\n        // ghostClass is added in dragStarted\n\n        if (moved && !awaitingDragStarted) {\n          toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : this.options.ghostClass, false);\n        }\n\n        toggleClass(dragEl, this.options.chosenClass, false); // Drag stop event\n\n        _dispatchEvent({\n          sortable: this,\n          name: 'unchoose',\n          toEl: parentEl,\n          newIndex: null,\n          newDraggableIndex: null,\n          originalEvent: evt\n        });\n\n        if (rootEl !== parentEl) {\n          if (newIndex >= 0) {\n            // Add event\n            _dispatchEvent({\n              rootEl: parentEl,\n              name: 'add',\n              toEl: parentEl,\n              fromEl: rootEl,\n              originalEvent: evt\n            }); // Remove event\n\n\n            _dispatchEvent({\n              sortable: this,\n              name: 'remove',\n              toEl: parentEl,\n              originalEvent: evt\n            }); // drag from one list and drop into another\n\n\n            _dispatchEvent({\n              rootEl: parentEl,\n              name: 'sort',\n              toEl: parentEl,\n              fromEl: rootEl,\n              originalEvent: evt\n            });\n\n            _dispatchEvent({\n              sortable: this,\n              name: 'sort',\n              toEl: parentEl,\n              originalEvent: evt\n            });\n          }\n\n          putSortable && putSortable.save();\n        } else {\n          if (newIndex !== oldIndex) {\n            if (newIndex >= 0) {\n              // drag & drop within the same list\n              _dispatchEvent({\n                sortable: this,\n                name: 'update',\n                toEl: parentEl,\n                originalEvent: evt\n              });\n\n              _dispatchEvent({\n                sortable: this,\n                name: 'sort',\n                toEl: parentEl,\n                originalEvent: evt\n              });\n            }\n          }\n        }\n\n        if (Sortable.active) {\n          /* jshint eqnull:true */\n          if (newIndex == null || newIndex === -1) {\n            newIndex = oldIndex;\n            newDraggableIndex = oldDraggableIndex;\n          }\n\n          _dispatchEvent({\n            sortable: this,\n            name: 'end',\n            toEl: parentEl,\n            originalEvent: evt\n          }); // Save sorting\n\n\n          this.save();\n        }\n      }\n    }\n\n    this._nulling();\n  },\n  _nulling: function _nulling() {\n    pluginEvent('nulling', this);\n    rootEl = dragEl = parentEl = ghostEl = nextEl = cloneEl = lastDownEl = cloneHidden = tapEvt = touchEvt = moved = newIndex = newDraggableIndex = oldIndex = oldDraggableIndex = lastTarget = lastDirection = putSortable = activeGroup = Sortable.dragged = Sortable.ghost = Sortable.clone = Sortable.active = null;\n    savedInputChecked.forEach(function (el) {\n      el.checked = true;\n    });\n    savedInputChecked.length = lastDx = lastDy = 0;\n  },\n  handleEvent: function handleEvent(\n  /**Event*/\n  evt) {\n    switch (evt.type) {\n      case 'drop':\n      case 'dragend':\n        this._onDrop(evt);\n\n        break;\n\n      case 'dragenter':\n      case 'dragover':\n        if (dragEl) {\n          this._onDragOver(evt);\n\n          _globalDragOver(evt);\n        }\n\n        break;\n\n      case 'selectstart':\n        evt.preventDefault();\n        break;\n    }\n  },\n\n  /**\n   * Serializes the item into an array of string.\n   * @returns {String[]}\n   */\n  toArray: function toArray() {\n    var order = [],\n        el,\n        children = this.el.children,\n        i = 0,\n        n = children.length,\n        options = this.options;\n\n    for (; i < n; i++) {\n      el = children[i];\n\n      if (closest(el, options.draggable, this.el, false)) {\n        order.push(el.getAttribute(options.dataIdAttr) || _generateId(el));\n      }\n    }\n\n    return order;\n  },\n\n  /**\n   * Sorts the elements according to the array.\n   * @param  {String[]}  order  order of the items\n   */\n  sort: function sort(order) {\n    var items = {},\n        rootEl = this.el;\n    this.toArray().forEach(function (id, i) {\n      var el = rootEl.children[i];\n\n      if (closest(el, this.options.draggable, rootEl, false)) {\n        items[id] = el;\n      }\n    }, this);\n    order.forEach(function (id) {\n      if (items[id]) {\n        rootEl.removeChild(items[id]);\n        rootEl.appendChild(items[id]);\n      }\n    });\n  },\n\n  /**\n   * Save the current sorting\n   */\n  save: function save() {\n    var store = this.options.store;\n    store && store.set && store.set(this);\n  },\n\n  /**\n   * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\n   * @param   {HTMLElement}  el\n   * @param   {String}       [selector]  default: `options.draggable`\n   * @returns {HTMLElement|null}\n   */\n  closest: function closest$1(el, selector) {\n    return closest(el, selector || this.options.draggable, this.el, false);\n  },\n\n  /**\n   * Set/get option\n   * @param   {string} name\n   * @param   {*}      [value]\n   * @returns {*}\n   */\n  option: function option(name, value) {\n    var options = this.options;\n\n    if (value === void 0) {\n      return options[name];\n    } else {\n      var modifiedValue = PluginManager.modifyOption(this, name, value);\n\n      if (typeof modifiedValue !== 'undefined') {\n        options[name] = modifiedValue;\n      } else {\n        options[name] = value;\n      }\n\n      if (name === 'group') {\n        _prepareGroup(options);\n      }\n    }\n  },\n\n  /**\n   * Destroy\n   */\n  destroy: function destroy() {\n    pluginEvent('destroy', this);\n    var el = this.el;\n    el[expando] = null;\n    off(el, 'mousedown', this._onTapStart);\n    off(el, 'touchstart', this._onTapStart);\n    off(el, 'pointerdown', this._onTapStart);\n\n    if (this.nativeDraggable) {\n      off(el, 'dragover', this);\n      off(el, 'dragenter', this);\n    } // Remove draggable attributes\n\n\n    Array.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {\n      el.removeAttribute('draggable');\n    });\n\n    this._onDrop();\n\n    this._disableDelayedDragEvents();\n\n    sortables.splice(sortables.indexOf(this.el), 1);\n    this.el = el = null;\n  },\n  _hideClone: function _hideClone() {\n    if (!cloneHidden) {\n      pluginEvent('hideClone', this);\n      if (Sortable.eventCanceled) return;\n      css(cloneEl, 'display', 'none');\n\n      if (this.options.removeCloneOnHide && cloneEl.parentNode) {\n        cloneEl.parentNode.removeChild(cloneEl);\n      }\n\n      cloneHidden = true;\n    }\n  },\n  _showClone: function _showClone(putSortable) {\n    if (putSortable.lastPutMode !== 'clone') {\n      this._hideClone();\n\n      return;\n    }\n\n    if (cloneHidden) {\n      pluginEvent('showClone', this);\n      if (Sortable.eventCanceled) return; // show clone at dragEl or original position\n\n      if (rootEl.contains(dragEl) && !this.options.group.revertClone) {\n        rootEl.insertBefore(cloneEl, dragEl);\n      } else if (nextEl) {\n        rootEl.insertBefore(cloneEl, nextEl);\n      } else {\n        rootEl.appendChild(cloneEl);\n      }\n\n      if (this.options.group.revertClone) {\n        this.animate(dragEl, cloneEl);\n      }\n\n      css(cloneEl, 'display', '');\n      cloneHidden = false;\n    }\n  }\n};\n\nfunction _globalDragOver(\n/**Event*/\nevt) {\n  if (evt.dataTransfer) {\n    evt.dataTransfer.dropEffect = 'move';\n  }\n\n  evt.cancelable && evt.preventDefault();\n}\n\nfunction _onMove(fromEl, toEl, dragEl, dragRect, targetEl, targetRect, originalEvent, willInsertAfter) {\n  var evt,\n      sortable = fromEl[expando],\n      onMoveFn = sortable.options.onMove,\n      retVal; // Support for new CustomEvent feature\n\n  if (window.CustomEvent && !IE11OrLess && !Edge) {\n    evt = new CustomEvent('move', {\n      bubbles: true,\n      cancelable: true\n    });\n  } else {\n    evt = document.createEvent('Event');\n    evt.initEvent('move', true, true);\n  }\n\n  evt.to = toEl;\n  evt.from = fromEl;\n  evt.dragged = dragEl;\n  evt.draggedRect = dragRect;\n  evt.related = targetEl || toEl;\n  evt.relatedRect = targetRect || getRect(toEl);\n  evt.willInsertAfter = willInsertAfter;\n  evt.originalEvent = originalEvent;\n  fromEl.dispatchEvent(evt);\n\n  if (onMoveFn) {\n    retVal = onMoveFn.call(sortable, evt, originalEvent);\n  }\n\n  return retVal;\n}\n\nfunction _disableDraggable(el) {\n  el.draggable = false;\n}\n\nfunction _unsilent() {\n  _silent = false;\n}\n\nfunction _ghostIsLast(evt, vertical, sortable) {\n  var rect = getRect(lastChild(sortable.el, sortable.options.draggable));\n  var spacer = 10;\n  return vertical ? evt.clientX > rect.right + spacer || evt.clientX <= rect.right && evt.clientY > rect.bottom && evt.clientX >= rect.left : evt.clientX > rect.right && evt.clientY > rect.top || evt.clientX <= rect.right && evt.clientY > rect.bottom + spacer;\n}\n\nfunction _getSwapDirection(evt, target, targetRect, vertical, swapThreshold, invertedSwapThreshold, invertSwap, isLastTarget) {\n  var mouseOnAxis = vertical ? evt.clientY : evt.clientX,\n      targetLength = vertical ? targetRect.height : targetRect.width,\n      targetS1 = vertical ? targetRect.top : targetRect.left,\n      targetS2 = vertical ? targetRect.bottom : targetRect.right,\n      invert = false;\n\n  if (!invertSwap) {\n    // Never invert or create dragEl shadow when target movemenet causes mouse to move past the end of regular swapThreshold\n    if (isLastTarget && targetMoveDistance < targetLength * swapThreshold) {\n      // multiplied only by swapThreshold because mouse will already be inside target by (1 - threshold) * targetLength / 2\n      // check if past first invert threshold on side opposite of lastDirection\n      if (!pastFirstInvertThresh && (lastDirection === 1 ? mouseOnAxis > targetS1 + targetLength * invertedSwapThreshold / 2 : mouseOnAxis < targetS2 - targetLength * invertedSwapThreshold / 2)) {\n        // past first invert threshold, do not restrict inverted threshold to dragEl shadow\n        pastFirstInvertThresh = true;\n      }\n\n      if (!pastFirstInvertThresh) {\n        // dragEl shadow (target move distance shadow)\n        if (lastDirection === 1 ? mouseOnAxis < targetS1 + targetMoveDistance // over dragEl shadow\n        : mouseOnAxis > targetS2 - targetMoveDistance) {\n          return -lastDirection;\n        }\n      } else {\n        invert = true;\n      }\n    } else {\n      // Regular\n      if (mouseOnAxis > targetS1 + targetLength * (1 - swapThreshold) / 2 && mouseOnAxis < targetS2 - targetLength * (1 - swapThreshold) / 2) {\n        return _getInsertDirection(target);\n      }\n    }\n  }\n\n  invert = invert || invertSwap;\n\n  if (invert) {\n    // Invert of regular\n    if (mouseOnAxis < targetS1 + targetLength * invertedSwapThreshold / 2 || mouseOnAxis > targetS2 - targetLength * invertedSwapThreshold / 2) {\n      return mouseOnAxis > targetS1 + targetLength / 2 ? 1 : -1;\n    }\n  }\n\n  return 0;\n}\n/**\n * Gets the direction dragEl must be swapped relative to target in order to make it\n * seem that dragEl has been \"inserted\" into that element's position\n * @param  {HTMLElement} target       The target whose position dragEl is being inserted at\n * @return {Number}                   Direction dragEl must be swapped\n */\n\n\nfunction _getInsertDirection(target) {\n  if (index(dragEl) < index(target)) {\n    return 1;\n  } else {\n    return -1;\n  }\n}\n/**\n * Generate id\n * @param   {HTMLElement} el\n * @returns {String}\n * @private\n */\n\n\nfunction _generateId(el) {\n  var str = el.tagName + el.className + el.src + el.href + el.textContent,\n      i = str.length,\n      sum = 0;\n\n  while (i--) {\n    sum += str.charCodeAt(i);\n  }\n\n  return sum.toString(36);\n}\n\nfunction _saveInputCheckedState(root) {\n  savedInputChecked.length = 0;\n  var inputs = root.getElementsByTagName('input');\n  var idx = inputs.length;\n\n  while (idx--) {\n    var el = inputs[idx];\n    el.checked && savedInputChecked.push(el);\n  }\n}\n\nfunction _nextTick(fn) {\n  return setTimeout(fn, 0);\n}\n\nfunction _cancelNextTick(id) {\n  return clearTimeout(id);\n} // Fixed #973:\n\n\nif (documentExists) {\n  on(document, 'touchmove', function (evt) {\n    if ((Sortable.active || awaitingDragStarted) && evt.cancelable) {\n      evt.preventDefault();\n    }\n  });\n} // Export utils\n\n\nSortable.utils = {\n  on: on,\n  off: off,\n  css: css,\n  find: find,\n  is: function is(el, selector) {\n    return !!closest(el, selector, el, false);\n  },\n  extend: extend,\n  throttle: throttle,\n  closest: closest,\n  toggleClass: toggleClass,\n  clone: clone,\n  index: index,\n  nextTick: _nextTick,\n  cancelNextTick: _cancelNextTick,\n  detectDirection: _detectDirection,\n  getChild: getChild\n};\n/**\n * Get the Sortable instance of an element\n * @param  {HTMLElement} element The element\n * @return {Sortable|undefined}         The instance of Sortable\n */\n\nSortable.get = function (element) {\n  return element[expando];\n};\n/**\n * Mount a plugin to Sortable\n * @param  {...SortablePlugin|SortablePlugin[]} plugins       Plugins being mounted\n */\n\n\nSortable.mount = function () {\n  for (var _len = arguments.length, plugins = new Array(_len), _key = 0; _key < _len; _key++) {\n    plugins[_key] = arguments[_key];\n  }\n\n  if (plugins[0].constructor === Array) plugins = plugins[0];\n  plugins.forEach(function (plugin) {\n    if (!plugin.prototype || !plugin.prototype.constructor) {\n      throw \"Sortable: Mounted plugin must be a constructor function, not \".concat({}.toString.call(plugin));\n    }\n\n    if (plugin.utils) Sortable.utils = _objectSpread({}, Sortable.utils, plugin.utils);\n    PluginManager.mount(plugin);\n  });\n};\n/**\n * Create sortable instance\n * @param {HTMLElement}  el\n * @param {Object}      [options]\n */\n\n\nSortable.create = function (el, options) {\n  return new Sortable(el, options);\n}; // Export\n\n\nSortable.version = version;\n\nvar autoScrolls = [],\n    scrollEl,\n    scrollRootEl,\n    scrolling = false,\n    lastAutoScrollX,\n    lastAutoScrollY,\n    touchEvt$1,\n    pointerElemChangedInterval;\n\nfunction AutoScrollPlugin() {\n  function AutoScroll() {\n    this.defaults = {\n      scroll: true,\n      scrollSensitivity: 30,\n      scrollSpeed: 10,\n      bubbleScroll: true\n    }; // Bind all private methods\n\n    for (var fn in this) {\n      if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n        this[fn] = this[fn].bind(this);\n      }\n    }\n  }\n\n  AutoScroll.prototype = {\n    dragStarted: function dragStarted(_ref) {\n      var originalEvent = _ref.originalEvent;\n\n      if (this.sortable.nativeDraggable) {\n        on(document, 'dragover', this._handleAutoScroll);\n      } else {\n        if (this.options.supportPointer) {\n          on(document, 'pointermove', this._handleFallbackAutoScroll);\n        } else if (originalEvent.touches) {\n          on(document, 'touchmove', this._handleFallbackAutoScroll);\n        } else {\n          on(document, 'mousemove', this._handleFallbackAutoScroll);\n        }\n      }\n    },\n    dragOverCompleted: function dragOverCompleted(_ref2) {\n      var originalEvent = _ref2.originalEvent;\n\n      // For when bubbling is canceled and using fallback (fallback 'touchmove' always reached)\n      if (!this.options.dragOverBubble && !originalEvent.rootEl) {\n        this._handleAutoScroll(originalEvent);\n      }\n    },\n    drop: function drop() {\n      if (this.sortable.nativeDraggable) {\n        off(document, 'dragover', this._handleAutoScroll);\n      } else {\n        off(document, 'pointermove', this._handleFallbackAutoScroll);\n        off(document, 'touchmove', this._handleFallbackAutoScroll);\n        off(document, 'mousemove', this._handleFallbackAutoScroll);\n      }\n\n      clearPointerElemChangedInterval();\n      clearAutoScrolls();\n      cancelThrottle();\n    },\n    nulling: function nulling() {\n      touchEvt$1 = scrollRootEl = scrollEl = scrolling = pointerElemChangedInterval = lastAutoScrollX = lastAutoScrollY = null;\n      autoScrolls.length = 0;\n    },\n    _handleFallbackAutoScroll: function _handleFallbackAutoScroll(evt) {\n      this._handleAutoScroll(evt, true);\n    },\n    _handleAutoScroll: function _handleAutoScroll(evt, fallback) {\n      var _this = this;\n\n      var x = (evt.touches ? evt.touches[0] : evt).clientX,\n          y = (evt.touches ? evt.touches[0] : evt).clientY,\n          elem = document.elementFromPoint(x, y);\n      touchEvt$1 = evt; // IE does not seem to have native autoscroll,\n      // Edge's autoscroll seems too conditional,\n      // MACOS Safari does not have autoscroll,\n      // Firefox and Chrome are good\n\n      if (fallback || Edge || IE11OrLess || Safari) {\n        autoScroll(evt, this.options, elem, fallback); // Listener for pointer element change\n\n        var ogElemScroller = getParentAutoScrollElement(elem, true);\n\n        if (scrolling && (!pointerElemChangedInterval || x !== lastAutoScrollX || y !== lastAutoScrollY)) {\n          pointerElemChangedInterval && clearPointerElemChangedInterval(); // Detect for pointer elem change, emulating native DnD behaviour\n\n          pointerElemChangedInterval = setInterval(function () {\n            var newElem = getParentAutoScrollElement(document.elementFromPoint(x, y), true);\n\n            if (newElem !== ogElemScroller) {\n              ogElemScroller = newElem;\n              clearAutoScrolls();\n            }\n\n            autoScroll(evt, _this.options, newElem, fallback);\n          }, 10);\n          lastAutoScrollX = x;\n          lastAutoScrollY = y;\n        }\n      } else {\n        // if DnD is enabled (and browser has good autoscrolling), first autoscroll will already scroll, so get parent autoscroll of first autoscroll\n        if (!this.options.bubbleScroll || getParentAutoScrollElement(elem, true) === getWindowScrollingElement()) {\n          clearAutoScrolls();\n          return;\n        }\n\n        autoScroll(evt, this.options, getParentAutoScrollElement(elem, false), false);\n      }\n    }\n  };\n  return _extends(AutoScroll, {\n    pluginName: 'scroll',\n    initializeByDefault: true\n  });\n}\n\nfunction clearAutoScrolls() {\n  autoScrolls.forEach(function (autoScroll) {\n    clearInterval(autoScroll.pid);\n  });\n  autoScrolls = [];\n}\n\nfunction clearPointerElemChangedInterval() {\n  clearInterval(pointerElemChangedInterval);\n}\n\nvar autoScroll = throttle(function (evt, options, rootEl, isFallback) {\n  // Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=505521\n  if (!options.scroll) return;\n  var x = (evt.touches ? evt.touches[0] : evt).clientX,\n      y = (evt.touches ? evt.touches[0] : evt).clientY,\n      sens = options.scrollSensitivity,\n      speed = options.scrollSpeed,\n      winScroller = getWindowScrollingElement();\n  var scrollThisInstance = false,\n      scrollCustomFn; // New scroll root, set scrollEl\n\n  if (scrollRootEl !== rootEl) {\n    scrollRootEl = rootEl;\n    clearAutoScrolls();\n    scrollEl = options.scroll;\n    scrollCustomFn = options.scrollFn;\n\n    if (scrollEl === true) {\n      scrollEl = getParentAutoScrollElement(rootEl, true);\n    }\n  }\n\n  var layersOut = 0;\n  var currentParent = scrollEl;\n\n  do {\n    var el = currentParent,\n        rect = getRect(el),\n        top = rect.top,\n        bottom = rect.bottom,\n        left = rect.left,\n        right = rect.right,\n        width = rect.width,\n        height = rect.height,\n        canScrollX = void 0,\n        canScrollY = void 0,\n        scrollWidth = el.scrollWidth,\n        scrollHeight = el.scrollHeight,\n        elCSS = css(el),\n        scrollPosX = el.scrollLeft,\n        scrollPosY = el.scrollTop;\n\n    if (el === winScroller) {\n      canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll' || elCSS.overflowX === 'visible');\n      canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll' || elCSS.overflowY === 'visible');\n    } else {\n      canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll');\n      canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll');\n    }\n\n    var vx = canScrollX && (Math.abs(right - x) <= sens && scrollPosX + width < scrollWidth) - (Math.abs(left - x) <= sens && !!scrollPosX);\n    var vy = canScrollY && (Math.abs(bottom - y) <= sens && scrollPosY + height < scrollHeight) - (Math.abs(top - y) <= sens && !!scrollPosY);\n\n    if (!autoScrolls[layersOut]) {\n      for (var i = 0; i <= layersOut; i++) {\n        if (!autoScrolls[i]) {\n          autoScrolls[i] = {};\n        }\n      }\n    }\n\n    if (autoScrolls[layersOut].vx != vx || autoScrolls[layersOut].vy != vy || autoScrolls[layersOut].el !== el) {\n      autoScrolls[layersOut].el = el;\n      autoScrolls[layersOut].vx = vx;\n      autoScrolls[layersOut].vy = vy;\n      clearInterval(autoScrolls[layersOut].pid);\n\n      if (vx != 0 || vy != 0) {\n        scrollThisInstance = true;\n        /* jshint loopfunc:true */\n\n        autoScrolls[layersOut].pid = setInterval(function () {\n          // emulate drag over during autoscroll (fallback), emulating native DnD behaviour\n          if (isFallback && this.layer === 0) {\n            Sortable.active._onTouchMove(touchEvt$1); // To move ghost if it is positioned absolutely\n\n          }\n\n          var scrollOffsetY = autoScrolls[this.layer].vy ? autoScrolls[this.layer].vy * speed : 0;\n          var scrollOffsetX = autoScrolls[this.layer].vx ? autoScrolls[this.layer].vx * speed : 0;\n\n          if (typeof scrollCustomFn === 'function') {\n            if (scrollCustomFn.call(Sortable.dragged.parentNode[expando], scrollOffsetX, scrollOffsetY, evt, touchEvt$1, autoScrolls[this.layer].el) !== 'continue') {\n              return;\n            }\n          }\n\n          scrollBy(autoScrolls[this.layer].el, scrollOffsetX, scrollOffsetY);\n        }.bind({\n          layer: layersOut\n        }), 24);\n      }\n    }\n\n    layersOut++;\n  } while (options.bubbleScroll && currentParent !== winScroller && (currentParent = getParentAutoScrollElement(currentParent, false)));\n\n  scrolling = scrollThisInstance; // in case another function catches scrolling as false in between when it is not\n}, 30);\n\nvar drop = function drop(_ref) {\n  var originalEvent = _ref.originalEvent,\n      putSortable = _ref.putSortable,\n      dragEl = _ref.dragEl,\n      activeSortable = _ref.activeSortable,\n      dispatchSortableEvent = _ref.dispatchSortableEvent,\n      hideGhostForTarget = _ref.hideGhostForTarget,\n      unhideGhostForTarget = _ref.unhideGhostForTarget;\n  if (!originalEvent) return;\n  var toSortable = putSortable || activeSortable;\n  hideGhostForTarget();\n  var touch = originalEvent.changedTouches && originalEvent.changedTouches.length ? originalEvent.changedTouches[0] : originalEvent;\n  var target = document.elementFromPoint(touch.clientX, touch.clientY);\n  unhideGhostForTarget();\n\n  if (toSortable && !toSortable.el.contains(target)) {\n    dispatchSortableEvent('spill');\n    this.onSpill({\n      dragEl: dragEl,\n      putSortable: putSortable\n    });\n  }\n};\n\nfunction Revert() {}\n\nRevert.prototype = {\n  startIndex: null,\n  dragStart: function dragStart(_ref2) {\n    var oldDraggableIndex = _ref2.oldDraggableIndex;\n    this.startIndex = oldDraggableIndex;\n  },\n  onSpill: function onSpill(_ref3) {\n    var dragEl = _ref3.dragEl,\n        putSortable = _ref3.putSortable;\n    this.sortable.captureAnimationState();\n\n    if (putSortable) {\n      putSortable.captureAnimationState();\n    }\n\n    var nextSibling = getChild(this.sortable.el, this.startIndex, this.options);\n\n    if (nextSibling) {\n      this.sortable.el.insertBefore(dragEl, nextSibling);\n    } else {\n      this.sortable.el.appendChild(dragEl);\n    }\n\n    this.sortable.animateAll();\n\n    if (putSortable) {\n      putSortable.animateAll();\n    }\n  },\n  drop: drop\n};\n\n_extends(Revert, {\n  pluginName: 'revertOnSpill'\n});\n\nfunction Remove() {}\n\nRemove.prototype = {\n  onSpill: function onSpill(_ref4) {\n    var dragEl = _ref4.dragEl,\n        putSortable = _ref4.putSortable;\n    var parentSortable = putSortable || this.sortable;\n    parentSortable.captureAnimationState();\n    dragEl.parentNode && dragEl.parentNode.removeChild(dragEl);\n    parentSortable.animateAll();\n  },\n  drop: drop\n};\n\n_extends(Remove, {\n  pluginName: 'removeOnSpill'\n});\n\nvar lastSwapEl;\n\nfunction SwapPlugin() {\n  function Swap() {\n    this.defaults = {\n      swapClass: 'sortable-swap-highlight'\n    };\n  }\n\n  Swap.prototype = {\n    dragStart: function dragStart(_ref) {\n      var dragEl = _ref.dragEl;\n      lastSwapEl = dragEl;\n    },\n    dragOverValid: function dragOverValid(_ref2) {\n      var completed = _ref2.completed,\n          target = _ref2.target,\n          onMove = _ref2.onMove,\n          activeSortable = _ref2.activeSortable,\n          changed = _ref2.changed,\n          cancel = _ref2.cancel;\n      if (!activeSortable.options.swap) return;\n      var el = this.sortable.el,\n          options = this.options;\n\n      if (target && target !== el) {\n        var prevSwapEl = lastSwapEl;\n\n        if (onMove(target) !== false) {\n          toggleClass(target, options.swapClass, true);\n          lastSwapEl = target;\n        } else {\n          lastSwapEl = null;\n        }\n\n        if (prevSwapEl && prevSwapEl !== lastSwapEl) {\n          toggleClass(prevSwapEl, options.swapClass, false);\n        }\n      }\n\n      changed();\n      completed(true);\n      cancel();\n    },\n    drop: function drop(_ref3) {\n      var activeSortable = _ref3.activeSortable,\n          putSortable = _ref3.putSortable,\n          dragEl = _ref3.dragEl;\n      var toSortable = putSortable || this.sortable;\n      var options = this.options;\n      lastSwapEl && toggleClass(lastSwapEl, options.swapClass, false);\n\n      if (lastSwapEl && (options.swap || putSortable && putSortable.options.swap)) {\n        if (dragEl !== lastSwapEl) {\n          toSortable.captureAnimationState();\n          if (toSortable !== activeSortable) activeSortable.captureAnimationState();\n          swapNodes(dragEl, lastSwapEl);\n          toSortable.animateAll();\n          if (toSortable !== activeSortable) activeSortable.animateAll();\n        }\n      }\n    },\n    nulling: function nulling() {\n      lastSwapEl = null;\n    }\n  };\n  return _extends(Swap, {\n    pluginName: 'swap',\n    eventProperties: function eventProperties() {\n      return {\n        swapItem: lastSwapEl\n      };\n    }\n  });\n}\n\nfunction swapNodes(n1, n2) {\n  var p1 = n1.parentNode,\n      p2 = n2.parentNode,\n      i1,\n      i2;\n  if (!p1 || !p2 || p1.isEqualNode(n2) || p2.isEqualNode(n1)) return;\n  i1 = index(n1);\n  i2 = index(n2);\n\n  if (p1.isEqualNode(p2) && i1 < i2) {\n    i2++;\n  }\n\n  p1.insertBefore(n2, p1.children[i1]);\n  p2.insertBefore(n1, p2.children[i2]);\n}\n\nvar multiDragElements = [],\n    multiDragClones = [],\n    lastMultiDragSelect,\n    // for selection with modifier key down (SHIFT)\nmultiDragSortable,\n    initialFolding = false,\n    // Initial multi-drag fold when drag started\nfolding = false,\n    // Folding any other time\ndragStarted = false,\n    dragEl$1,\n    clonesFromRect,\n    clonesHidden;\n\nfunction MultiDragPlugin() {\n  function MultiDrag(sortable) {\n    // Bind all private methods\n    for (var fn in this) {\n      if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n        this[fn] = this[fn].bind(this);\n      }\n    }\n\n    if (sortable.options.supportPointer) {\n      on(document, 'pointerup', this._deselectMultiDrag);\n    } else {\n      on(document, 'mouseup', this._deselectMultiDrag);\n      on(document, 'touchend', this._deselectMultiDrag);\n    }\n\n    on(document, 'keydown', this._checkKeyDown);\n    on(document, 'keyup', this._checkKeyUp);\n    this.defaults = {\n      selectedClass: 'sortable-selected',\n      multiDragKey: null,\n      setData: function setData(dataTransfer, dragEl) {\n        var data = '';\n\n        if (multiDragElements.length && multiDragSortable === sortable) {\n          multiDragElements.forEach(function (multiDragElement, i) {\n            data += (!i ? '' : ', ') + multiDragElement.textContent;\n          });\n        } else {\n          data = dragEl.textContent;\n        }\n\n        dataTransfer.setData('Text', data);\n      }\n    };\n  }\n\n  MultiDrag.prototype = {\n    multiDragKeyDown: false,\n    isMultiDrag: false,\n    delayStartGlobal: function delayStartGlobal(_ref) {\n      var dragged = _ref.dragEl;\n      dragEl$1 = dragged;\n    },\n    delayEnded: function delayEnded() {\n      this.isMultiDrag = ~multiDragElements.indexOf(dragEl$1);\n    },\n    setupClone: function setupClone(_ref2) {\n      var sortable = _ref2.sortable,\n          cancel = _ref2.cancel;\n      if (!this.isMultiDrag) return;\n\n      for (var i = 0; i < multiDragElements.length; i++) {\n        multiDragClones.push(clone(multiDragElements[i]));\n        multiDragClones[i].sortableIndex = multiDragElements[i].sortableIndex;\n        multiDragClones[i].draggable = false;\n        multiDragClones[i].style['will-change'] = '';\n        toggleClass(multiDragClones[i], this.options.selectedClass, false);\n        multiDragElements[i] === dragEl$1 && toggleClass(multiDragClones[i], this.options.chosenClass, false);\n      }\n\n      sortable._hideClone();\n\n      cancel();\n    },\n    clone: function clone(_ref3) {\n      var sortable = _ref3.sortable,\n          rootEl = _ref3.rootEl,\n          dispatchSortableEvent = _ref3.dispatchSortableEvent,\n          cancel = _ref3.cancel;\n      if (!this.isMultiDrag) return;\n\n      if (!this.options.removeCloneOnHide) {\n        if (multiDragElements.length && multiDragSortable === sortable) {\n          insertMultiDragClones(true, rootEl);\n          dispatchSortableEvent('clone');\n          cancel();\n        }\n      }\n    },\n    showClone: function showClone(_ref4) {\n      var cloneNowShown = _ref4.cloneNowShown,\n          rootEl = _ref4.rootEl,\n          cancel = _ref4.cancel;\n      if (!this.isMultiDrag) return;\n      insertMultiDragClones(false, rootEl);\n      multiDragClones.forEach(function (clone) {\n        css(clone, 'display', '');\n      });\n      cloneNowShown();\n      clonesHidden = false;\n      cancel();\n    },\n    hideClone: function hideClone(_ref5) {\n      var _this = this;\n\n      var sortable = _ref5.sortable,\n          cloneNowHidden = _ref5.cloneNowHidden,\n          cancel = _ref5.cancel;\n      if (!this.isMultiDrag) return;\n      multiDragClones.forEach(function (clone) {\n        css(clone, 'display', 'none');\n\n        if (_this.options.removeCloneOnHide && clone.parentNode) {\n          clone.parentNode.removeChild(clone);\n        }\n      });\n      cloneNowHidden();\n      clonesHidden = true;\n      cancel();\n    },\n    dragStartGlobal: function dragStartGlobal(_ref6) {\n      var sortable = _ref6.sortable;\n\n      if (!this.isMultiDrag && multiDragSortable) {\n        multiDragSortable.multiDrag._deselectMultiDrag();\n      }\n\n      multiDragElements.forEach(function (multiDragElement) {\n        multiDragElement.sortableIndex = index(multiDragElement);\n      }); // Sort multi-drag elements\n\n      multiDragElements = multiDragElements.sort(function (a, b) {\n        return a.sortableIndex - b.sortableIndex;\n      });\n      dragStarted = true;\n    },\n    dragStarted: function dragStarted(_ref7) {\n      var _this2 = this;\n\n      var sortable = _ref7.sortable;\n      if (!this.isMultiDrag) return;\n\n      if (this.options.sort) {\n        // Capture rects,\n        // hide multi drag elements (by positioning them absolute),\n        // set multi drag elements rects to dragRect,\n        // show multi drag elements,\n        // animate to rects,\n        // unset rects & remove from DOM\n        sortable.captureAnimationState();\n\n        if (this.options.animation) {\n          multiDragElements.forEach(function (multiDragElement) {\n            if (multiDragElement === dragEl$1) return;\n            css(multiDragElement, 'position', 'absolute');\n          });\n          var dragRect = getRect(dragEl$1, false, true, true);\n          multiDragElements.forEach(function (multiDragElement) {\n            if (multiDragElement === dragEl$1) return;\n            setRect(multiDragElement, dragRect);\n          });\n          folding = true;\n          initialFolding = true;\n        }\n      }\n\n      sortable.animateAll(function () {\n        folding = false;\n        initialFolding = false;\n\n        if (_this2.options.animation) {\n          multiDragElements.forEach(function (multiDragElement) {\n            unsetRect(multiDragElement);\n          });\n        } // Remove all auxiliary multidrag items from el, if sorting enabled\n\n\n        if (_this2.options.sort) {\n          removeMultiDragElements();\n        }\n      });\n    },\n    dragOver: function dragOver(_ref8) {\n      var target = _ref8.target,\n          completed = _ref8.completed,\n          cancel = _ref8.cancel;\n\n      if (folding && ~multiDragElements.indexOf(target)) {\n        completed(false);\n        cancel();\n      }\n    },\n    revert: function revert(_ref9) {\n      var fromSortable = _ref9.fromSortable,\n          rootEl = _ref9.rootEl,\n          sortable = _ref9.sortable,\n          dragRect = _ref9.dragRect;\n\n      if (multiDragElements.length > 1) {\n        // Setup unfold animation\n        multiDragElements.forEach(function (multiDragElement) {\n          sortable.addAnimationState({\n            target: multiDragElement,\n            rect: folding ? getRect(multiDragElement) : dragRect\n          });\n          unsetRect(multiDragElement);\n          multiDragElement.fromRect = dragRect;\n          fromSortable.removeAnimationState(multiDragElement);\n        });\n        folding = false;\n        insertMultiDragElements(!this.options.removeCloneOnHide, rootEl);\n      }\n    },\n    dragOverCompleted: function dragOverCompleted(_ref10) {\n      var sortable = _ref10.sortable,\n          isOwner = _ref10.isOwner,\n          insertion = _ref10.insertion,\n          activeSortable = _ref10.activeSortable,\n          parentEl = _ref10.parentEl,\n          putSortable = _ref10.putSortable;\n      var options = this.options;\n\n      if (insertion) {\n        // Clones must be hidden before folding animation to capture dragRectAbsolute properly\n        if (isOwner) {\n          activeSortable._hideClone();\n        }\n\n        initialFolding = false; // If leaving sort:false root, or already folding - Fold to new location\n\n        if (options.animation && multiDragElements.length > 1 && (folding || !isOwner && !activeSortable.options.sort && !putSortable)) {\n          // Fold: Set all multi drag elements's rects to dragEl's rect when multi-drag elements are invisible\n          var dragRectAbsolute = getRect(dragEl$1, false, true, true);\n          multiDragElements.forEach(function (multiDragElement) {\n            if (multiDragElement === dragEl$1) return;\n            setRect(multiDragElement, dragRectAbsolute); // Move element(s) to end of parentEl so that it does not interfere with multi-drag clones insertion if they are inserted\n            // while folding, and so that we can capture them again because old sortable will no longer be fromSortable\n\n            parentEl.appendChild(multiDragElement);\n          });\n          folding = true;\n        } // Clones must be shown (and check to remove multi drags) after folding when interfering multiDragElements are moved out\n\n\n        if (!isOwner) {\n          // Only remove if not folding (folding will remove them anyways)\n          if (!folding) {\n            removeMultiDragElements();\n          }\n\n          if (multiDragElements.length > 1) {\n            var clonesHiddenBefore = clonesHidden;\n\n            activeSortable._showClone(sortable); // Unfold animation for clones if showing from hidden\n\n\n            if (activeSortable.options.animation && !clonesHidden && clonesHiddenBefore) {\n              multiDragClones.forEach(function (clone) {\n                activeSortable.addAnimationState({\n                  target: clone,\n                  rect: clonesFromRect\n                });\n                clone.fromRect = clonesFromRect;\n                clone.thisAnimationDuration = null;\n              });\n            }\n          } else {\n            activeSortable._showClone(sortable);\n          }\n        }\n      }\n    },\n    dragOverAnimationCapture: function dragOverAnimationCapture(_ref11) {\n      var dragRect = _ref11.dragRect,\n          isOwner = _ref11.isOwner,\n          activeSortable = _ref11.activeSortable;\n      multiDragElements.forEach(function (multiDragElement) {\n        multiDragElement.thisAnimationDuration = null;\n      });\n\n      if (activeSortable.options.animation && !isOwner && activeSortable.multiDrag.isMultiDrag) {\n        clonesFromRect = _extends({}, dragRect);\n        var dragMatrix = matrix(dragEl$1, true);\n        clonesFromRect.top -= dragMatrix.f;\n        clonesFromRect.left -= dragMatrix.e;\n      }\n    },\n    dragOverAnimationComplete: function dragOverAnimationComplete() {\n      if (folding) {\n        folding = false;\n        removeMultiDragElements();\n      }\n    },\n    drop: function drop(_ref12) {\n      var evt = _ref12.originalEvent,\n          rootEl = _ref12.rootEl,\n          parentEl = _ref12.parentEl,\n          sortable = _ref12.sortable,\n          dispatchSortableEvent = _ref12.dispatchSortableEvent,\n          oldIndex = _ref12.oldIndex,\n          putSortable = _ref12.putSortable;\n      var toSortable = putSortable || this.sortable;\n      if (!evt) return;\n      var options = this.options,\n          children = parentEl.children; // Multi-drag selection\n\n      if (!dragStarted) {\n        if (options.multiDragKey && !this.multiDragKeyDown) {\n          this._deselectMultiDrag();\n        }\n\n        toggleClass(dragEl$1, options.selectedClass, !~multiDragElements.indexOf(dragEl$1));\n\n        if (!~multiDragElements.indexOf(dragEl$1)) {\n          multiDragElements.push(dragEl$1);\n          dispatchEvent({\n            sortable: sortable,\n            rootEl: rootEl,\n            name: 'select',\n            targetEl: dragEl$1,\n            originalEvt: evt\n          }); // Modifier activated, select from last to dragEl\n\n          if (evt.shiftKey && lastMultiDragSelect && sortable.el.contains(lastMultiDragSelect)) {\n            var lastIndex = index(lastMultiDragSelect),\n                currentIndex = index(dragEl$1);\n\n            if (~lastIndex && ~currentIndex && lastIndex !== currentIndex) {\n              // Must include lastMultiDragSelect (select it), in case modified selection from no selection\n              // (but previous selection existed)\n              var n, i;\n\n              if (currentIndex > lastIndex) {\n                i = lastIndex;\n                n = currentIndex;\n              } else {\n                i = currentIndex;\n                n = lastIndex + 1;\n              }\n\n              for (; i < n; i++) {\n                if (~multiDragElements.indexOf(children[i])) continue;\n                toggleClass(children[i], options.selectedClass, true);\n                multiDragElements.push(children[i]);\n                dispatchEvent({\n                  sortable: sortable,\n                  rootEl: rootEl,\n                  name: 'select',\n                  targetEl: children[i],\n                  originalEvt: evt\n                });\n              }\n            }\n          } else {\n            lastMultiDragSelect = dragEl$1;\n          }\n\n          multiDragSortable = toSortable;\n        } else {\n          multiDragElements.splice(multiDragElements.indexOf(dragEl$1), 1);\n          lastMultiDragSelect = null;\n          dispatchEvent({\n            sortable: sortable,\n            rootEl: rootEl,\n            name: 'deselect',\n            targetEl: dragEl$1,\n            originalEvt: evt\n          });\n        }\n      } // Multi-drag drop\n\n\n      if (dragStarted && this.isMultiDrag) {\n        // Do not \"unfold\" after around dragEl if reverted\n        if ((parentEl[expando].options.sort || parentEl !== rootEl) && multiDragElements.length > 1) {\n          var dragRect = getRect(dragEl$1),\n              multiDragIndex = index(dragEl$1, ':not(.' + this.options.selectedClass + ')');\n          if (!initialFolding && options.animation) dragEl$1.thisAnimationDuration = null;\n          toSortable.captureAnimationState();\n\n          if (!initialFolding) {\n            if (options.animation) {\n              dragEl$1.fromRect = dragRect;\n              multiDragElements.forEach(function (multiDragElement) {\n                multiDragElement.thisAnimationDuration = null;\n\n                if (multiDragElement !== dragEl$1) {\n                  var rect = folding ? getRect(multiDragElement) : dragRect;\n                  multiDragElement.fromRect = rect; // Prepare unfold animation\n\n                  toSortable.addAnimationState({\n                    target: multiDragElement,\n                    rect: rect\n                  });\n                }\n              });\n            } // Multi drag elements are not necessarily removed from the DOM on drop, so to reinsert\n            // properly they must all be removed\n\n\n            removeMultiDragElements();\n            multiDragElements.forEach(function (multiDragElement) {\n              if (children[multiDragIndex]) {\n                parentEl.insertBefore(multiDragElement, children[multiDragIndex]);\n              } else {\n                parentEl.appendChild(multiDragElement);\n              }\n\n              multiDragIndex++;\n            }); // If initial folding is done, the elements may have changed position because they are now\n            // unfolding around dragEl, even though dragEl may not have his index changed, so update event\n            // must be fired here as Sortable will not.\n\n            if (oldIndex === index(dragEl$1)) {\n              var update = false;\n              multiDragElements.forEach(function (multiDragElement) {\n                if (multiDragElement.sortableIndex !== index(multiDragElement)) {\n                  update = true;\n                  return;\n                }\n              });\n\n              if (update) {\n                dispatchSortableEvent('update');\n              }\n            }\n          } // Must be done after capturing individual rects (scroll bar)\n\n\n          multiDragElements.forEach(function (multiDragElement) {\n            unsetRect(multiDragElement);\n          });\n          toSortable.animateAll();\n        }\n\n        multiDragSortable = toSortable;\n      } // Remove clones if necessary\n\n\n      if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== 'clone') {\n        multiDragClones.forEach(function (clone) {\n          clone.parentNode && clone.parentNode.removeChild(clone);\n        });\n      }\n    },\n    nullingGlobal: function nullingGlobal() {\n      this.isMultiDrag = dragStarted = false;\n      multiDragClones.length = 0;\n    },\n    destroyGlobal: function destroyGlobal() {\n      this._deselectMultiDrag();\n\n      off(document, 'pointerup', this._deselectMultiDrag);\n      off(document, 'mouseup', this._deselectMultiDrag);\n      off(document, 'touchend', this._deselectMultiDrag);\n      off(document, 'keydown', this._checkKeyDown);\n      off(document, 'keyup', this._checkKeyUp);\n    },\n    _deselectMultiDrag: function _deselectMultiDrag(evt) {\n      if (typeof dragStarted !== \"undefined\" && dragStarted) return; // Only deselect if selection is in this sortable\n\n      if (multiDragSortable !== this.sortable) return; // Only deselect if target is not item in this sortable\n\n      if (evt && closest(evt.target, this.options.draggable, this.sortable.el, false)) return; // Only deselect if left click\n\n      if (evt && evt.button !== 0) return;\n\n      while (multiDragElements.length) {\n        var el = multiDragElements[0];\n        toggleClass(el, this.options.selectedClass, false);\n        multiDragElements.shift();\n        dispatchEvent({\n          sortable: this.sortable,\n          rootEl: this.sortable.el,\n          name: 'deselect',\n          targetEl: el,\n          originalEvt: evt\n        });\n      }\n    },\n    _checkKeyDown: function _checkKeyDown(evt) {\n      if (evt.key === this.options.multiDragKey) {\n        this.multiDragKeyDown = true;\n      }\n    },\n    _checkKeyUp: function _checkKeyUp(evt) {\n      if (evt.key === this.options.multiDragKey) {\n        this.multiDragKeyDown = false;\n      }\n    }\n  };\n  return _extends(MultiDrag, {\n    // Static methods & properties\n    pluginName: 'multiDrag',\n    utils: {\n      /**\r\n       * Selects the provided multi-drag item\r\n       * @param  {HTMLElement} el    The element to be selected\r\n       */\n      select: function select(el) {\n        var sortable = el.parentNode[expando];\n        if (!sortable || !sortable.options.multiDrag || ~multiDragElements.indexOf(el)) return;\n\n        if (multiDragSortable && multiDragSortable !== sortable) {\n          multiDragSortable.multiDrag._deselectMultiDrag();\n\n          multiDragSortable = sortable;\n        }\n\n        toggleClass(el, sortable.options.selectedClass, true);\n        multiDragElements.push(el);\n      },\n\n      /**\r\n       * Deselects the provided multi-drag item\r\n       * @param  {HTMLElement} el    The element to be deselected\r\n       */\n      deselect: function deselect(el) {\n        var sortable = el.parentNode[expando],\n            index = multiDragElements.indexOf(el);\n        if (!sortable || !sortable.options.multiDrag || !~index) return;\n        toggleClass(el, sortable.options.selectedClass, false);\n        multiDragElements.splice(index, 1);\n      }\n    },\n    eventProperties: function eventProperties() {\n      var _this3 = this;\n\n      var oldIndicies = [],\n          newIndicies = [];\n      multiDragElements.forEach(function (multiDragElement) {\n        oldIndicies.push({\n          multiDragElement: multiDragElement,\n          index: multiDragElement.sortableIndex\n        }); // multiDragElements will already be sorted if folding\n\n        var newIndex;\n\n        if (folding && multiDragElement !== dragEl$1) {\n          newIndex = -1;\n        } else if (folding) {\n          newIndex = index(multiDragElement, ':not(.' + _this3.options.selectedClass + ')');\n        } else {\n          newIndex = index(multiDragElement);\n        }\n\n        newIndicies.push({\n          multiDragElement: multiDragElement,\n          index: newIndex\n        });\n      });\n      return {\n        items: _toConsumableArray(multiDragElements),\n        clones: [].concat(multiDragClones),\n        oldIndicies: oldIndicies,\n        newIndicies: newIndicies\n      };\n    },\n    optionListeners: {\n      multiDragKey: function multiDragKey(key) {\n        key = key.toLowerCase();\n\n        if (key === 'ctrl') {\n          key = 'Control';\n        } else if (key.length > 1) {\n          key = key.charAt(0).toUpperCase() + key.substr(1);\n        }\n\n        return key;\n      }\n    }\n  });\n}\n\nfunction insertMultiDragElements(clonesInserted, rootEl) {\n  multiDragElements.forEach(function (multiDragElement, i) {\n    var target = rootEl.children[multiDragElement.sortableIndex + (clonesInserted ? Number(i) : 0)];\n\n    if (target) {\n      rootEl.insertBefore(multiDragElement, target);\n    } else {\n      rootEl.appendChild(multiDragElement);\n    }\n  });\n}\n/**\r\n * Insert multi-drag clones\r\n * @param  {[Boolean]} elementsInserted  Whether the multi-drag elements are inserted\r\n * @param  {HTMLElement} rootEl\r\n */\n\n\nfunction insertMultiDragClones(elementsInserted, rootEl) {\n  multiDragClones.forEach(function (clone, i) {\n    var target = rootEl.children[clone.sortableIndex + (elementsInserted ? Number(i) : 0)];\n\n    if (target) {\n      rootEl.insertBefore(clone, target);\n    } else {\n      rootEl.appendChild(clone);\n    }\n  });\n}\n\nfunction removeMultiDragElements() {\n  multiDragElements.forEach(function (multiDragElement) {\n    if (multiDragElement === dragEl$1) return;\n    multiDragElement.parentNode && multiDragElement.parentNode.removeChild(multiDragElement);\n  });\n}\n\nSortable.mount(new AutoScrollPlugin());\nSortable.mount(Remove, Revert);\n\nexport default Sortable;\nexport { MultiDragPlugin as MultiDrag, Sortable, SwapPlugin as Swap };\n","import Toaster from './Toaster.vue'\nimport Api from './api.js'\nimport Positions from './defaults/positions.js'\n\nconst Plugin = (app, options = {}) => {\n  let methods = Api(options)\n  app.$toast = methods\n  app.config.globalProperties.$toast = methods\n}\n\nToaster.install = Plugin\n\nexport default Toaster\nexport { Toaster, Positions }\n","function removeNode(node) {\r\n  if (node.parentElement !== null) {\r\n    node.parentElement.removeChild(node);\r\n  }\r\n}\r\n\r\nfunction insertNodeAt(fatherNode, node, position) {\r\n  const refNode =\r\n    position === 0\r\n      ? fatherNode.children[0]\r\n      : fatherNode.children[position - 1].nextSibling;\r\n  fatherNode.insertBefore(node, refNode);\r\n}\r\n\r\nexport { insertNodeAt, removeNode };\r\n","function getConsole() {\r\n  if (typeof window !== \"undefined\") {\r\n    return window.console;\r\n  }\r\n  return global.console;\r\n}\r\nconst console = getConsole();\r\n\r\nexport { console };\r\n","function cached(fn) {\r\n  const cache = Object.create(null);\r\n  return function cachedFn(str) {\r\n    const hit = cache[str];\r\n    return hit || (cache[str] = fn(str));\r\n  };\r\n}\r\n\r\nconst regex = /-(\\w)/g;\r\nconst camelize = cached(str => str.replace(regex, (_, c) => c.toUpperCase()));\r\n\r\nexport { camelize };\r\n","const manageAndEmit = [\"Start\", \"Add\", \"Remove\", \"Update\", \"End\"];\r\nconst emit = [\"Choose\", \"Unchoose\", \"Sort\", \"Filter\", \"Clone\"];\r\nconst manage = [\"Move\"];\r\nconst eventHandlerNames = [manage, manageAndEmit, emit]\r\n  .flatMap(events => events)\r\n  .map(evt => `on${evt}`);\r\n\r\nconst events = {\r\n  manage,\r\n  manageAndEmit,\r\n  emit\r\n};\r\n\r\nfunction isReadOnly(eventName) {\r\n  return eventHandlerNames.indexOf(eventName) !== -1;\r\n}\r\n\r\nexport { events, isReadOnly };\r\n","const tags = [\r\n  \"a\",\r\n  \"abbr\",\r\n  \"address\",\r\n  \"area\",\r\n  \"article\",\r\n  \"aside\",\r\n  \"audio\",\r\n  \"b\",\r\n  \"base\",\r\n  \"bdi\",\r\n  \"bdo\",\r\n  \"blockquote\",\r\n  \"body\",\r\n  \"br\",\r\n  \"button\",\r\n  \"canvas\",\r\n  \"caption\",\r\n  \"cite\",\r\n  \"code\",\r\n  \"col\",\r\n  \"colgroup\",\r\n  \"data\",\r\n  \"datalist\",\r\n  \"dd\",\r\n  \"del\",\r\n  \"details\",\r\n  \"dfn\",\r\n  \"dialog\",\r\n  \"div\",\r\n  \"dl\",\r\n  \"dt\",\r\n  \"em\",\r\n  \"embed\",\r\n  \"fieldset\",\r\n  \"figcaption\",\r\n  \"figure\",\r\n  \"footer\",\r\n  \"form\",\r\n  \"h1\",\r\n  \"h2\",\r\n  \"h3\",\r\n  \"h4\",\r\n  \"h5\",\r\n  \"h6\",\r\n  \"head\",\r\n  \"header\",\r\n  \"hgroup\",\r\n  \"hr\",\r\n  \"html\",\r\n  \"i\",\r\n  \"iframe\",\r\n  \"img\",\r\n  \"input\",\r\n  \"ins\",\r\n  \"kbd\",\r\n  \"label\",\r\n  \"legend\",\r\n  \"li\",\r\n  \"link\",\r\n  \"main\",\r\n  \"map\",\r\n  \"mark\",\r\n  \"math\",\r\n  \"menu\",\r\n  \"menuitem\",\r\n  \"meta\",\r\n  \"meter\",\r\n  \"nav\",\r\n  \"noscript\",\r\n  \"object\",\r\n  \"ol\",\r\n  \"optgroup\",\r\n  \"option\",\r\n  \"output\",\r\n  \"p\",\r\n  \"param\",\r\n  \"picture\",\r\n  \"pre\",\r\n  \"progress\",\r\n  \"q\",\r\n  \"rb\",\r\n  \"rp\",\r\n  \"rt\",\r\n  \"rtc\",\r\n  \"ruby\",\r\n  \"s\",\r\n  \"samp\",\r\n  \"script\",\r\n  \"section\",\r\n  \"select\",\r\n  \"slot\",\r\n  \"small\",\r\n  \"source\",\r\n  \"span\",\r\n  \"strong\",\r\n  \"style\",\r\n  \"sub\",\r\n  \"summary\",\r\n  \"sup\",\r\n  \"svg\",\r\n  \"table\",\r\n  \"tbody\",\r\n  \"td\",\r\n  \"template\",\r\n  \"textarea\",\r\n  \"tfoot\",\r\n  \"th\",\r\n  \"thead\",\r\n  \"time\",\r\n  \"title\",\r\n  \"tr\",\r\n  \"track\",\r\n  \"u\",\r\n  \"ul\",\r\n  \"var\",\r\n  \"video\",\r\n  \"wbr\"\r\n];\r\n\r\nfunction isHtmlTag(name) {\r\n  return tags.includes(name);\r\n}\r\n\r\nfunction isTransition(name) {\r\n  return [\"transition-group\", \"TransitionGroup\"].includes(name);\r\n}\r\n\r\nfunction isHtmlAttribute(value) {\r\n  return (\r\n    [\"id\", \"class\", \"role\", \"style\"].includes(value) ||\r\n    value.startsWith(\"data-\") ||\r\n    value.startsWith(\"aria-\")\r\n  );\r\n}\r\n\r\nexport { isHtmlTag, isHtmlAttribute, isTransition };\r\n","import { camelize } from \"../util/string\";\r\nimport { events, isReadOnly } from \"./sortableEvents\";\r\nimport { isHtmlAttribute } from \"../util/tags\";\r\n\r\nfunction project(entries) {\r\n  return entries.reduce((res, [key, value]) => {\r\n    res[key] = value;\r\n    return res;\r\n  }, {});\r\n}\r\n\r\nfunction getComponentAttributes({ $attrs, componentData = {} }) {\r\n  const attributes = project(\r\n    Object.entries($attrs).filter(([key, _]) => isHtmlAttribute(key))\r\n  );\r\n  return {\r\n    ...attributes,\r\n    ...componentData\r\n  };\r\n}\r\n\r\nfunction createSortableOption({ $attrs, callBackBuilder }) {\r\n  const options = project(getValidSortableEntries($attrs));\r\n  Object.entries(callBackBuilder).forEach(([eventType, eventBuilder]) => {\r\n    events[eventType].forEach(event => {\r\n      options[`on${event}`] = eventBuilder(event);\r\n    });\r\n  });\r\n  const draggable = `[data-draggable]${options.draggable || \"\"}`;\r\n  return {\r\n    ...options,\r\n    draggable\r\n  };\r\n}\r\n\r\nfunction getValidSortableEntries(value) {\r\n  return Object.entries(value)\r\n    .filter(([key, _]) => !isHtmlAttribute(key))\r\n    .map(([key, value]) => [camelize(key), value])\r\n    .filter(([key, _]) => !isReadOnly(key));\r\n}\r\n\r\nexport {\r\n  getComponentAttributes,\r\n  createSortableOption,\r\n  getValidSortableEntries\r\n};\r\n","const getHtmlElementFromNode = ({ el }) => el;\r\nconst addContext = (domElement, context) =>\r\n  (domElement.__draggable_context = context);\r\nconst getContext = domElement => domElement.__draggable_context;\r\n\r\nclass ComponentStructure {\r\n  constructor({\r\n    nodes: { header, default: defaultNodes, footer },\r\n    root,\r\n    realList\r\n  }) {\r\n    this.defaultNodes = defaultNodes;\r\n    this.children = [...header, ...defaultNodes, ...footer];\r\n    this.externalComponent = root.externalComponent;\r\n    this.rootTransition = root.transition;\r\n    this.tag = root.tag;\r\n    this.realList = realList;\r\n  }\r\n\r\n  get _isRootComponent() {\r\n    return this.externalComponent || this.rootTransition;\r\n  }\r\n\r\n  render(h, attributes) {\r\n    const { tag, children, _isRootComponent } = this;\r\n    const option = !_isRootComponent ? children : { default: () => children };\r\n    return h(tag, attributes, option);\r\n  }\r\n\r\n  updated() {\r\n    const { defaultNodes, realList } = this;\r\n    defaultNodes.forEach((node, index) => {\r\n      addContext(getHtmlElementFromNode(node), {\r\n        element: realList[index],\r\n        index\r\n      });\r\n    });\r\n  }\r\n\r\n  getUnderlyingVm(domElement) {\r\n    return getContext(domElement);\r\n  }\r\n\r\n  getVmIndexFromDomIndex(domIndex, element) {\r\n    const { defaultNodes } = this;\r\n    const { length } = defaultNodes;\r\n    const domChildren = element.children;\r\n    const domElement = domChildren.item(domIndex);\r\n\r\n    if (domElement === null) {\r\n      return length;\r\n    }\r\n    const context = getContext(domElement);\r\n    if (context) {\r\n      return context.index;\r\n    }\r\n\r\n    if (length === 0) {\r\n      return 0;\r\n    }\r\n    const firstDomListElement = getHtmlElementFromNode(defaultNodes[0]);\r\n    const indexFirstDomListElement = [...domChildren].findIndex(\r\n      element => element === firstDomListElement\r\n    );\r\n    return domIndex < indexFirstDomListElement ? 0 : length;\r\n  }\r\n}\r\n\r\nexport { ComponentStructure };\r\n","import { ComponentStructure } from \"./componentStructure\";\r\nimport { isHtmlTag, isTransition } from \"../util/tags\";\r\nimport { resolveComponent, TransitionGroup } from \"vue\";\r\n\r\nfunction getSlot(slots, key) {\r\n  const slotValue = slots[key];\r\n  return slotValue ? slotValue() : [];\r\n}\r\n\r\nfunction computeNodes({ $slots, realList, getKey }) {\r\n  const normalizedList = realList || [];\r\n  const [header, footer] = [\"header\", \"footer\"].map(name =>\r\n    getSlot($slots, name)\r\n  );\r\n  const { item } = $slots;\r\n  if (!item) {\r\n    throw new Error(\"draggable element must have an item slot\");\r\n  }\r\n  const defaultNodes = normalizedList.flatMap((element, index) =>\r\n    item({ element, index }).map(node => {\r\n      node.key = getKey(element);\r\n      node.props = { ...(node.props || {}), \"data-draggable\": true };\r\n      return node;\r\n    })\r\n  );\r\n  if (defaultNodes.length !== normalizedList.length) {\r\n    throw new Error(\"Item slot must have only one child\");\r\n  }\r\n  return {\r\n    header,\r\n    footer,\r\n    default: defaultNodes\r\n  };\r\n}\r\n\r\nfunction getRootInformation(tag) {\r\n  const transition = isTransition(tag);\r\n  const externalComponent = !isHtmlTag(tag) && !transition;\r\n  return {\r\n    transition,\r\n    externalComponent,\r\n    tag: externalComponent\r\n      ? resolveComponent(tag)\r\n      : transition\r\n      ? TransitionGroup\r\n      : tag\r\n  };\r\n}\r\n\r\nfunction computeComponentStructure({ $slots, tag, realList, getKey }) {\r\n  const nodes = computeNodes({ $slots, realList, getKey });\r\n  const root = getRootInformation(tag);\r\n  return new ComponentStructure({ nodes, root, realList });\r\n}\r\n\r\nexport { computeComponentStructure };\r\n","import Sortable from \"sortablejs\";\r\nimport { insertNodeAt, removeNode } from \"./util/htmlHelper\";\r\nimport { console } from \"./util/console\";\r\nimport {\r\n  getComponentAttributes,\r\n  createSortableOption,\r\n  getValidSortableEntries\r\n} from \"./core/componentBuilderHelper\";\r\nimport { computeComponentStructure } from \"./core/renderHelper\";\r\nimport { events } from \"./core/sortableEvents\";\r\nimport { h, defineComponent, nextTick } from \"vue\";\r\n\r\nfunction emit(evtName, evtData) {\r\n  nextTick(() => this.$emit(evtName.toLowerCase(), evtData));\r\n}\r\n\r\nfunction manage(evtName) {\r\n  return (evtData, originalElement) => {\r\n    if (this.realList !== null) {\r\n      return this[`onDrag${evtName}`](evtData, originalElement);\r\n    }\r\n  };\r\n}\r\n\r\nfunction manageAndEmit(evtName) {\r\n  const delegateCallBack = manage.call(this, evtName);\r\n  return (evtData, originalElement) => {\r\n    delegateCallBack.call(this, evtData, originalElement);\r\n    emit.call(this, evtName, evtData);\r\n  };\r\n}\r\n\r\nlet draggingElement = null;\r\n\r\nconst props = {\r\n  list: {\r\n    type: Array,\r\n    required: false,\r\n    default: null\r\n  },\r\n  modelValue: {\r\n    type: Array,\r\n    required: false,\r\n    default: null\r\n  },\r\n  itemKey: {\r\n    type: [String, Function],\r\n    required: true\r\n  },\r\n  clone: {\r\n    type: Function,\r\n    default: original => {\r\n      return original;\r\n    }\r\n  },\r\n  tag: {\r\n    type: String,\r\n    default: \"div\"\r\n  },\r\n  move: {\r\n    type: Function,\r\n    default: null\r\n  },\r\n  componentData: {\r\n    type: Object,\r\n    required: false,\r\n    default: null\r\n  }\r\n};\r\n\r\nconst emits = [\r\n  \"update:modelValue\",\r\n  \"change\",\r\n  ...[...events.manageAndEmit, ...events.emit].map(evt => evt.toLowerCase())\r\n];\r\n\r\nconst draggableComponent = defineComponent({\r\n  name: \"draggable\",\r\n\r\n  inheritAttrs: false,\r\n\r\n  props,\r\n\r\n  emits,\r\n\r\n  data() {\r\n    return {\r\n      error: false\r\n    };\r\n  },\r\n\r\n  render() {\r\n    try {\r\n      this.error = false;\r\n      const { $slots, $attrs, tag, componentData, realList, getKey } = this;\r\n      const componentStructure = computeComponentStructure({\r\n        $slots,\r\n        tag,\r\n        realList,\r\n        getKey\r\n      });\r\n      this.componentStructure = componentStructure;\r\n      const attributes = getComponentAttributes({ $attrs, componentData });\r\n      return componentStructure.render(h, attributes);\r\n    } catch (err) {\r\n      this.error = true;\r\n      return h(\"pre\", { style: { color: \"red\" } }, err.stack);\r\n    }\r\n  },\r\n\r\n  created() {\r\n    if (this.list !== null && this.modelValue !== null) {\r\n      console.error(\r\n        \"modelValue and list props are mutually exclusive! Please set one or another.\"\r\n      );\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    if (this.error) {\r\n      return;\r\n    }\r\n\r\n    const { $attrs, $el, componentStructure } = this;\r\n    componentStructure.updated();\r\n\r\n    const sortableOptions = createSortableOption({\r\n      $attrs,\r\n      callBackBuilder: {\r\n        manageAndEmit: event => manageAndEmit.call(this, event),\r\n        emit: event => emit.bind(this, event),\r\n        manage: event => manage.call(this, event)\r\n      }\r\n    });\r\n    const targetDomElement = $el.nodeType === 1 ? $el : $el.parentElement;\r\n    this._sortable = new Sortable(targetDomElement, sortableOptions);\r\n    this.targetDomElement = targetDomElement;\r\n    targetDomElement.__draggable_component__ = this;\r\n  },\r\n\r\n  updated() {\r\n    this.componentStructure.updated();\r\n  },\r\n\r\n  beforeUnmount() {\r\n    if (this._sortable !== undefined) this._sortable.destroy();\r\n  },\r\n\r\n  computed: {\r\n    realList() {\r\n      const { list } = this;\r\n      return list ? list : this.modelValue;\r\n    },\r\n\r\n    getKey() {\r\n      const { itemKey } = this;\r\n      if (typeof itemKey === \"function\") {\r\n        return itemKey;\r\n      }\r\n      return element => element[itemKey];\r\n    }\r\n  },\r\n\r\n  watch: {\r\n    $attrs: {\r\n      handler(newOptionValue) {\r\n        const { _sortable } = this;\r\n        if (!_sortable) return;\r\n        getValidSortableEntries(newOptionValue).forEach(([key, value]) => {\r\n          _sortable.option(key, value);\r\n        });\r\n      },\r\n      deep: true\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    getUnderlyingVm(domElement) {\r\n      return this.componentStructure.getUnderlyingVm(domElement) || null;\r\n    },\r\n\r\n    getUnderlyingPotencialDraggableComponent(htmElement) {\r\n      //TODO check case where you need to see component children\r\n      return htmElement.__draggable_component__;\r\n    },\r\n\r\n    emitChanges(evt) {\r\n      nextTick(() => this.$emit(\"change\", evt));\r\n    },\r\n\r\n    alterList(onList) {\r\n      if (this.list) {\r\n        onList(this.list);\r\n        return;\r\n      }\r\n      const newList = [...this.modelValue];\r\n      onList(newList);\r\n      this.$emit(\"update:modelValue\", newList);\r\n    },\r\n\r\n    spliceList() {\r\n      const spliceList = list => list.splice(...arguments);\r\n      this.alterList(spliceList);\r\n    },\r\n\r\n    updatePosition(oldIndex, newIndex) {\r\n      const updatePosition = list =>\r\n        list.splice(newIndex, 0, list.splice(oldIndex, 1)[0]);\r\n      this.alterList(updatePosition);\r\n    },\r\n\r\n    getRelatedContextFromMoveEvent({ to, related }) {\r\n      const component = this.getUnderlyingPotencialDraggableComponent(to);\r\n      if (!component) {\r\n        return { component };\r\n      }\r\n      const list = component.realList;\r\n      const context = { list, component };\r\n      if (to !== related && list) {\r\n        const destination = component.getUnderlyingVm(related) || {};\r\n        return { ...destination, ...context };\r\n      }\r\n      return context;\r\n    },\r\n\r\n    getVmIndexFromDomIndex(domIndex) {\r\n      return this.componentStructure.getVmIndexFromDomIndex(\r\n        domIndex,\r\n        this.targetDomElement\r\n      );\r\n    },\r\n\r\n    onDragStart(evt) {\r\n      this.context = this.getUnderlyingVm(evt.item);\r\n      evt.item._underlying_vm_ = this.clone(this.context.element);\r\n      draggingElement = evt.item;\r\n    },\r\n\r\n    onDragAdd(evt) {\r\n      const element = evt.item._underlying_vm_;\r\n      if (element === undefined) {\r\n        return;\r\n      }\r\n      removeNode(evt.item);\r\n      const newIndex = this.getVmIndexFromDomIndex(evt.newIndex);\r\n      this.spliceList(newIndex, 0, element);\r\n      const added = { element, newIndex };\r\n      this.emitChanges({ added });\r\n    },\r\n\r\n    onDragRemove(evt) {\r\n      insertNodeAt(this.$el, evt.item, evt.oldIndex);\r\n      if (evt.pullMode === \"clone\") {\r\n        removeNode(evt.clone);\r\n        return;\r\n      }\r\n      const { index: oldIndex, element } = this.context;\r\n      this.spliceList(oldIndex, 1);\r\n      const removed = { element, oldIndex };\r\n      this.emitChanges({ removed });\r\n    },\r\n\r\n    onDragUpdate(evt) {\r\n      removeNode(evt.item);\r\n      insertNodeAt(evt.from, evt.item, evt.oldIndex);\r\n      const oldIndex = this.context.index;\r\n      const newIndex = this.getVmIndexFromDomIndex(evt.newIndex);\r\n      this.updatePosition(oldIndex, newIndex);\r\n      const moved = { element: this.context.element, oldIndex, newIndex };\r\n      this.emitChanges({ moved });\r\n    },\r\n\r\n    computeFutureIndex(relatedContext, evt) {\r\n      if (!relatedContext.element) {\r\n        return 0;\r\n      }\r\n      const domChildren = [...evt.to.children].filter(\r\n        el => el.style[\"display\"] !== \"none\"\r\n      );\r\n      const currentDomIndex = domChildren.indexOf(evt.related);\r\n      const currentIndex = relatedContext.component.getVmIndexFromDomIndex(\r\n        currentDomIndex\r\n      );\r\n      const draggedInList = domChildren.indexOf(draggingElement) !== -1;\r\n      return draggedInList || !evt.willInsertAfter\r\n        ? currentIndex\r\n        : currentIndex + 1;\r\n    },\r\n\r\n    onDragMove(evt, originalEvent) {\r\n      const { move, realList } = this;\r\n      if (!move || !realList) {\r\n        return true;\r\n      }\r\n\r\n      const relatedContext = this.getRelatedContextFromMoveEvent(evt);\r\n      const futureIndex = this.computeFutureIndex(relatedContext, evt);\r\n      const draggedContext = {\r\n        ...this.context,\r\n        futureIndex\r\n      };\r\n      const sendEvent = {\r\n        ...evt,\r\n        relatedContext,\r\n        draggedContext\r\n      };\r\n      return move(sendEvent, originalEvent);\r\n    },\r\n\r\n    onDragEnd() {\r\n      draggingElement = null;\r\n    }\r\n  }\r\n});\r\n\r\nexport default draggableComponent;\r\n"],"names":["min","max","round","minN","parseFloat","maxN","n","Math","random","[object Object]","color","size","dropRate","size2","canvas","wind","windPosCoef","windSpeedMax","count","x","getRandomNumber","this","width","y","d","particleSize","tilt","tiltAngleIncremental","tiltAngle","angle","PI","remove","cos","parseInt","sin","height","ctx","fillStyle","beginPath","setTransform","BaseParticle","draw","arc","fill","fillRect","curveTo","cp1x","cp1y","cp2x","cp2y","bezierCurveTo","moveTo","opts","imgEl","drawImage","cachedImages","imgSource","document","createElement","setAttribute","createImageElement","options","particles","length","floor","type","defaultType","defaultSize","defaultDropRate","colors","defaultColors","url","defaults2","getDefaults","particle","getRandomParticle","Object","assign","colorIndex","CircleParticle","RectParticle","HeartParticle","ImageParticle","getImageElement","Error","particleOptions","items","pool","particleFactory","ParticleFactory","oldItems","newItems","forEach","update","pastBottom","setup","push","item","pop","create","kill","canvasElement","HTMLCanvasElement","isDefault","Canvas","createDefaultCanvas","getContext","id","style","display","position","pointerEvents","top","querySelector","appendChild","clearRect","window","innerWidth","innerHeight","setDefaults","killed","framesSinceDrop","canvasEl","W","H","particleManager","particlesPerFrame","windSpeed","windChange","animationId","particleOpts","getParticleOptions","ParticleManager","canvasId","getElementById","getCanvasElementFromOptions","createParticles","setGlobalOptions","requestAnimationFrame","mainLoop","bind","start","refresh","stop","clear","time","updateDimensions","numberToAdd","add","navigator","global","pluginDescriptor","setupFn","hook","getTarget","__VUE_DEVTOOLS_GLOBAL_HOOK__","emit","target","__VUE_DEVTOOLS_PLUGINS__","axios","callback","delay","startedAt","Date","now","timer","setTimeout","POSITIONS","TOP_RIGHT","TOP","TOP_LEFT","BOTTOM_RIGHT","BOTTOM","BOTTOM_LEFT","freeze","bottom","result","queue","name","i","splice","data","props","message","String","required","default","Positions","validator","value","values","includes","maxToasts","Number","Boolean","duration","dismissible","pauseOnHover","useDefaultCss","onClose","Function","onClick","isActive","parentTop","parentBottom","isHovered","createParents","setDefaultCss","setupContainer","showNotice","$on","close","methods","className","classList","container","body","childElementCount","shouldQueue","queueTimer","correctParent","insertAdjacentElement","$el","Timer","apply","arguments","newVal","pause","resume","stopTimer","el","parentNode","removeChild","computed","definePosition","enter","leave","$off","_createBlock","enter-active-class","$options","class","onMouseover","onMouseleave","role","mount","component","children","element","app","vNode","h","props2","_context","appContext","destroy","Api","globalOptions","localOptions","__spreadValues","Toaster","$emit","show","obj","Symbol","iterator","obj2","constructor","prototype","key","defineProperty","enumerable","configurable","writable","source","hasOwnProperty","call","ownKeys2","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","install","$toast","config","globalProperties","pattern","userAgent","match","IE11OrLess","Edge","FireFox","Safari","IOS","ChromeForAndroid","captureMode","capture","passive","event","fn","addEventListener","removeEventListener","selector","substring","matches","msMatchesSelector","webkitMatchesSelector","_","host","nodeType","includeCTX","getParentOrHost","_throttleTimeout","R_SPACE","state","replace","prop","val","defaultView","getComputedStyle","currentStyle","selfOnly","appliedTransforms","transform2","css","matrixFn","DOMMatrix","WebKitCSSMatrix","CSSMatrix","MSCSSMatrix","tagName","list","getElementsByTagName","scrollingElement","documentElement","relativeToContainingBlock","relativeToNonStaticParent","undoScale","getBoundingClientRect","elRect","left","right","getWindowScrollingElement","containerRect","elMatrix","matrix","scaleX","a","scaleY","elSide","parentSide","parent","getParentAutoScrollElement","elSideVal","getRect","parentSideVal","childNum","currentChild","Sortable","ghost","dragged","closest","draggable","last2","lastElementChild","previousElementSibling","index2","nodeName","toUpperCase","clone","offsetLeft","offsetTop","winScroller","scrollLeft","scrollTop","includeSelf","elem","gotSelf","clientWidth","scrollWidth","clientHeight","scrollHeight","elemCSS","overflowX","overflowY","rect1","rect2","ms","args","_this","Polymer","$","jQuery","Zepto","dom","cloneNode","expando","getTime","animationCallbackId","animationStates","captureAnimationState","animation","slice","child","rect","fromRect","_objectSpread","thisAnimationDuration","childMatrix","f","e","addAnimationState","removeAnimationState","arr","indexOfObject","animateAll","animating","animationTime","toRect","prevFromRect","prevToRect","animatingRect","targetMatrix","isRectEqual","sqrt","pow","calculateRealTime","animate","animationResetTimer","currentRect","translateX","translateY","animatingX","animatingY","offsetWidth","easing","animated","clearTimeout","plugins","defaults","initializeByDefault","PluginManager","plugin","option2","pluginEvent","eventName","sortable","evt","eventCanceled","cancel","eventNameGlobal","pluginName","initializePlugins","initialized","modified","modifyOption","getEventProperties","eventProperties","modifiedValue","optionListeners","pluginEvent2","_ref","originalEvent","_objectWithoutProperties","dragEl","parentEl","ghostEl","rootEl","nextEl","lastDownEl","cloneEl","cloneHidden","dragStarted","moved","putSortable","activeSortable","active","oldIndex","oldDraggableIndex","newIndex","newDraggableIndex","hideGhostForTarget","_hideGhostForTarget","unhideGhostForTarget","_unhideGhostForTarget","cloneNowHidden","cloneNowShown","dispatchSortableEvent","info","rootEl2","targetEl","cloneEl2","toEl","fromEl","oldIndex2","newIndex2","oldDraggableIndex2","newDraggableIndex2","putSortable2","extraEventProperties","onName","charAt","substr","CustomEvent","createEvent","initEvent","bubbles","cancelable","to","from","pullMode","lastPutMode","allEventProperties","dispatchEvent","activeGroup","tapEvt","touchEvt","lastDx","lastDy","tapDistanceLeft","tapDistanceTop","lastTarget","lastDirection","targetMoveDistance","ghostRelativeParent","awaitingDragStarted","ignoreNextClick","sortables","pastFirstInvertThresh","isCircumstantialInvert","ghostRelativeParentInitialScroll","_silent","savedInputChecked","documentExists","PositionGhostAbsolutely","CSSFloatProperty","supportDraggable","supportCssPointerEvents","cssText","_detectDirection","elCSS","elWidth","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","child1","getChild2","child2","firstChildCSS","secondChildCSS","firstChildWidth","marginLeft","marginRight","secondChildWidth","flexDirection","gridTemplateColumns","split","touchingSideChild2","_prepareGroup","pull","dragEl2","sameGroup","group","toFn","otherGroup","join","originalGroup","_typeof","checkPull","checkPut","put","revertClone","preventDefault","stopPropagation","stopImmediatePropagation","nearestEmptyInsertDetectEvent","touches","nearest","clientX","clientY","some","lastChild","threshold","emptyInsertThreshold","insideHorizontally","insideVertically","ret","_onDragOver","_checkOutsideTargetEl","_isOutsideThisEl","toString","_extends","sort","disabled","store","handle","test","swapThreshold","invertSwap","invertedSwapThreshold","removeCloneOnHide","direction","ghostClass","chosenClass","dragClass","ignore","preventOnFilter","setData","dataTransfer","textContent","dropBubble","dragoverBubble","dataIdAttr","delayOnTouchOnly","touchStartThreshold","devicePixelRatio","forceFallback","fallbackClass","fallbackOnBody","fallbackTolerance","fallbackOffset","supportPointer","nativeDraggable","_onTapStart","get","AnimationStateManager","dragRect","targetRect","willInsertAfter","retVal","onMoveFn","onMove","draggedRect","related","relatedRect","str","src","href","sum","charCodeAt","contains","_getDirection","touch","pointerType","originalTarget","shadowRoot","path","composedPath","root","inputs","idx","checked","button","isContentEditable","index","criteria","trim","_prepareDragStart","dragStartFn","ownerDocument","nextSibling","_lastX","_lastY","_onDrop","_disableDelayedDragEvents","_triggerDragStart","_disableDraggable","_disableDelayedDrag","_delayedDragTouchMoveHandler","on","_dragStartTimer","abs","_onTouchMove","_onDragStart","selection","empty","getSelection","removeAllRanges","err","_dragStarted","fallback","toggleClass","_appendGhost","_nulling","_emulateDragOver","elementFromPoint","ghostMatrix","relativeScrollOffset","getRelativeScrollOffset","dx","dy","b","c","cssMatrix","_hideClone","cloneId","_nextTick","insertBefore","_loopId","setInterval","effectAllowed","_dragStartId","revert","vertical","isOwner","canSort","fromSortable","completedFired","_ignoreWhileAnimating","completed","elLastChild","spacer","_ghostIsLast","_onMove","targetBeforeFirstSwap","sibling","differentLevel","differentRowCol","dragElS1Opp","dragElS2Opp","dragElOppLength","targetS1Opp","targetS2Opp","targetOppLength","_dragElInRowColumn","side1","scrolledPastTop","isScrolledPast","scrollBefore","isLastTarget","mouseOnAxis","targetLength","targetS1","targetS2","invert","_getInsertDirection","_getSwapDirection","dragIndex","nextElementSibling","after","moveVector","_unsilent","extra","axis","target2","after2","changed","insertion","_showClone","_offMoveEvents","_offUpEvents","save","handleEvent","dropEffect","toArray","order","getAttribute","_generateId","set","option","querySelectorAll","el2","removeAttribute","utils","off","find","is","extend","dst","throttle","nextTick","cancelNextTick","_cancelNextTick","detectDirection","getChild","_len","plugins2","Array","_key","version","scrollEl","scrollRootEl","lastAutoScrollX","lastAutoScrollY","touchEvt$1","pointerElemChangedInterval","autoScrolls","scrolling","autoScroll2","pid","autoScroll","isFallback","scroll","scrollCustomFn","sens","scrollSensitivity","speed","scrollSpeed","scrollThisInstance","scrollFn","layersOut","currentParent","canScrollX","canScrollY","scrollPosX","scrollPosY","vx","vy","layer","scrollOffsetY","scrollOffsetX","bubbleScroll","drop","toSortable","changedTouches","onSpill","node","parentElement","fatherNode","refNode","Revert","startIndex","dragStart","_ref2","_ref3","Remove","_ref4","parentSortable","_handleAutoScroll","_handleFallbackAutoScroll","dragOverCompleted","dragOverBubble","nulling","ogElemScroller","clearPointerElemChangedInterval","newElem","AutoScroll","console","regex","camelize","cache","cached","manageAndEmit","manage","eventHandlerNames","flatMap","events2","map","events","tags","startsWith","entries","reduce","res","isHtmlAttribute","value2","getHtmlElementFromNode","domElement","__draggable_context","nodes","header","defaultNodes","footer","realList","externalComponent","rootTransition","transition","tag","h2","attributes","_isRootComponent","context","domIndex","domChildren","firstDomListElement","findIndex","element2","isHtmlTag","resolveComponent","TransitionGroup","$slots","getKey","normalizedList","slots","slotValue","getSlot","__spreadProps","data-draggable","computeNodes","getRootInformation","ComponentStructure","evtName","evtData","toLowerCase","originalElement","delegateCallBack","draggingElement","draggableComponent","defineComponent","inheritAttrs","modelValue","itemKey","original","move","componentData","emits","error","$attrs","componentStructure","computeComponentStructure","project","getComponentAttributes","render","stack","updated","sortableOptions","callBackBuilder","getValidSortableEntries","eventType","eventBuilder","createSortableOption","targetDomElement","_sortable","__draggable_component__","watch","newOptionValue","deep","getUnderlyingVm","getUnderlyingPotencialDraggableComponent","htmElement","onList","newList","alterList","destination","getVmIndexFromDomIndex","_underlying_vm_","spliceList","added","emitChanges","removed","updatePosition","moved2","relatedContext","currentDomIndex","currentIndex","getRelatedContextFromMoveEvent","futureIndex","computeFutureIndex","draggedContext"],"mappings":"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ACD,GAAQD,GAAevrB,IAC/C0rB,YAAkBC,IAClBC,QAAW,KAAKjZ,MAEbkZ,GAAS,QACbL,iBACAD,QACAvrB,ICVF,MAAM8rB,GAAO,CACX,IACA,OACA,UACA,OACA,UACA,QACA,QACA,IACA,OACA,MACA,MACA,aACA,OACA,KACA,SACA,SACA,UACA,OACA,OACA,MACA,WACA,OACA,WACA,KACA,MACA,UACA,MACA,SACA,MACA,KACA,KACA,KACA,QACA,WACA,aACA,SACA,SACA,OACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,SACA,KACA,OACA,IACA,SACA,MACA,QACA,MACA,MACA,QACA,SACA,KACA,OACA,OACA,MACA,OACA,OACA,OACA,WACA,OACA,QACA,MACA,WACA,SACA,KACA,WACA,SACA,SACA,IACA,QACA,UACA,MACA,WACA,IACA,KACA,KACA,KACA,MACA,OACA,IACA,OACA,SACA,UACA,SACA,OACA,QACA,SACA,OACA,SACA,QACA,MACA,UACA,MACA,MACA,QACA,QACA,KACA,WACA,WACA,QACA,KACA,QACA,OACA,QACA,KACA,QACA,IACA,KACA,MACA,QACA,OAWF,YAAyB7pB,SAErB,CAAC,KAAM,QAAS,OAAQ,SAASE,SAASF,IAC1CA,EAAM8pB,WAAW,UACjB9pB,EAAM8pB,WAAW,SChIrB,YAAiBC,UACRA,EAAQC,QAAO,CAACC,GAAMjlB,EAAKhF,QAC5BgF,GAAOhF,EACJiqB,IACN,IA2BL,YAAiCjqB,UACxBjH,OAAOgxB,QAAQ/pB,GACnB4F,QAAO,EAAEZ,EAAK8C,MAAQoiB,GAAgBllB,KACtC2kB,KAAI,EAAE3kB,EAAKmlB,KAAW,CAAChB,GAASnkB,GAAMmlB,KACtCvkB,QAAO,EAAEZ,EAAK8C,MAAO,OF1BN0I,EE0BkBxL,SFzB7BwkB,GAAkBvjB,QAAQuK,IADnC,IAAoBA,KGbpB,MAAM4Z,GAAyB,EAAG3nB,GAAAA,KAASA,EAGrC5H,MAA2BwvB,EAAWC,oBAE5C,SACE11B,aACE21B,OAAOC,OAAEA,EAAQ3qB,QAAS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"}